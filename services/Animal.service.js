const config = require("../configs/app"),
  { ErrorBadRequest, ErrorNotFound } = require("../configs/errorMethods"),
  db = require("../models/Animal"),
  { Op, fn, col } = require("sequelize");
const { count } = require("../models/Animal");

const AnimalToProject = require("../models/AnimalToProject");
const Project = require("../models/Project");
const Farm = require("../models/Farm");
const AnimalType = require("../models/AnimalType");
const AnimalGroupType = require("../models/AnimalGroupType");
const AI = require("../models/AI");
const TransferEmbryo = require("../models/TransferEmbryo");
const PregnancyCheckup = require("../models/PregnancyCheckup");
const PregnancyCheckStatus = require("../models/PregnancyCheckStatus");
const GiveBirth = require("../models/GiveBirth");
const Yearling = require("../models/Yearling");
const Cart = require("../models/Cart");
const Semen = require("../models/Semen");
const Staff = require("../models/Staff");
const DiseaseActivity = require("../models/DiseaseActivity");
const DiseaseActivityAnimal = require("../models/DiseaseActivityAnimal");
const Disease = require("../models/Disease");
const DiseaseResult = require("../models/DiseaseResult");
const VaccineActivity = require("../models/VaccineActivity");
const Vaccine = require("../models/Vaccine");
const DewormActivity = require("../models/DewormActivity");
const DewormMedicine = require("../models/DewormMedicine");
const CureActivity = require("../models/CureActivity");

const dayjs = require("dayjs");
const locale = require("dayjs/locale/th");
const buddhistEra = require("dayjs/plugin/buddhistEra");
// var isBefore = require('dayjs/plugin/isBefore')
// dayjs.extend(isBefore)
dayjs.extend(buddhistEra);

const HF = [
  0.0, 0.01220703125, 0.0244140625, 0.03662109375, 0.048828125, 0.06103515625,
  0.0732421875, 0.08544921875, 0.09765625, 0.10986328125, 0.1220703125,
  0.13427734375, 0.146484375, 0.15869140625, 0.1708984375, 0.18310546875,
  0.1953125, 0.20751953125, 0.2197265625, 0.23193359375, 0.244140625,
  0.25634765625, 0.2685546875, 0.28076171875, 0.29296875, 0.30517578125,
  0.3173828125, 0.32958984375, 0.341796875, 0.35400390625, 0.3662109375,
  0.37841796875, 0.390625, 0.40283203125, 0.4150390625, 0.42724609375,
  0.439453125, 0.45166015625, 0.4638671875, 0.47607421875, 0.48828125,
  0.50048828125, 0.5126953125, 0.52490234375, 0.537109375, 0.54931640625,
  0.5615234375, 0.57373046875, 0.5859375, 0.59814453125, 0.6103515625,
  0.62255859375, 0.634765625, 0.64697265625, 0.6591796875, 0.67138671875,
  0.68359375, 0.69580078125, 0.7080078125, 0.72021484375, 0.732421875,
  0.74462890625, 0.7568359375, 0.76904296875, 0.78125, 0.79345703125,
  0.8056640625, 0.81787109375, 0.830078125, 0.84228515625, 0.8544921875,
  0.86669921875, 0.87890625, 0.89111328125, 0.9033203125, 0.91552734375,
  0.927734375, 0.93994140625, 0.9521484375, 0.96435546875, 0.9765625,
  0.98876953125, 1.0009765625, 1.01318359375, 1.025390625, 1.03759765625,
  1.0498046875, 1.06201171875, 1.07421875, 1.08642578125, 1.0986328125,
  1.11083984375, 1.123046875, 1.13525390625, 1.1474609375, 1.15966796875,
  1.171875, 1.18408203125, 1.1962890625, 1.20849609375, 1.220703125,
  1.23291015625, 1.2451171875, 1.25732421875, 1.26953125, 1.28173828125,
  1.2939453125, 1.30615234375, 1.318359375, 1.33056640625, 1.3427734375,
  1.35498046875, 1.3671875, 1.37939453125, 1.3916015625, 1.40380859375,
  1.416015625, 1.42822265625, 1.4404296875, 1.45263671875, 1.46484375,
  1.47705078125, 1.4892578125, 1.50146484375, 1.513671875, 1.52587890625,
  1.5380859375, 1.55029296875, 1.5625, 1.57470703125, 1.5869140625,
  1.59912109375, 1.611328125, 1.62353515625, 1.6357421875, 1.64794921875,
  1.66015625, 1.67236328125, 1.6845703125, 1.69677734375, 1.708984375,
  1.72119140625, 1.7333984375, 1.74560546875, 1.7578125, 1.77001953125,
  1.7822265625, 1.79443359375, 1.806640625, 1.81884765625, 1.8310546875,
  1.84326171875, 1.85546875, 1.86767578125, 1.8798828125, 1.89208984375,
  1.904296875, 1.91650390625, 1.9287109375, 1.94091796875, 1.953125,
  1.96533203125, 1.9775390625, 1.98974609375, 2.001953125, 2.01416015625,
  2.0263671875, 2.03857421875, 2.05078125, 2.06298828125, 2.0751953125,
  2.08740234375, 2.099609375, 2.11181640625, 2.1240234375, 2.13623046875,
  2.1484375, 2.16064453125, 2.1728515625, 2.18505859375, 2.197265625,
  2.20947265625, 2.2216796875, 2.23388671875, 2.24609375, 2.25830078125,
  2.2705078125, 2.28271484375, 2.294921875, 2.30712890625, 2.3193359375,
  2.33154296875, 2.34375, 2.35595703125, 2.3681640625, 2.38037109375,
  2.392578125, 2.40478515625, 2.4169921875, 2.42919921875, 2.44140625,
  2.45361328125, 2.4658203125, 2.47802734375, 2.490234375, 2.50244140625,
  2.5146484375, 2.52685546875, 2.5390625, 2.55126953125, 2.5634765625,
  2.57568359375, 2.587890625, 2.60009765625, 2.6123046875, 2.62451171875,
  2.63671875, 2.64892578125, 2.6611328125, 2.67333984375, 2.685546875,
  2.69775390625, 2.7099609375, 2.72216796875, 2.734375, 2.74658203125,
  2.7587890625, 2.77099609375, 2.783203125, 2.79541015625, 2.8076171875,
  2.81982421875, 2.83203125, 2.84423828125, 2.8564453125, 2.86865234375,
  2.880859375, 2.89306640625, 2.9052734375, 2.91748046875, 2.9296875,
  2.94189453125, 2.9541015625, 2.96630859375, 2.978515625, 2.99072265625,
  3.0029296875, 3.01513671875, 3.02734375, 3.03955078125, 3.0517578125,
  3.06396484375, 3.076171875, 3.08837890625, 3.1005859375, 3.11279296875, 3.125,
  3.13720703125, 3.1494140625, 3.16162109375, 3.173828125, 3.18603515625,
  3.1982421875, 3.21044921875, 3.22265625, 3.23486328125, 3.2470703125,
  3.25927734375, 3.271484375, 3.28369140625, 3.2958984375, 3.30810546875,
  3.3203125, 3.33251953125, 3.3447265625, 3.35693359375, 3.369140625,
  3.38134765625, 3.3935546875, 3.40576171875, 3.41796875, 3.43017578125,
  3.4423828125, 3.45458984375, 3.466796875, 3.47900390625, 3.4912109375,
  3.50341796875, 3.515625, 3.52783203125, 3.5400390625, 3.55224609375,
  3.564453125, 3.57666015625, 3.5888671875, 3.60107421875, 3.61328125,
  3.62548828125, 3.6376953125, 3.64990234375, 3.662109375, 3.67431640625,
  3.6865234375, 3.69873046875, 3.7109375, 3.72314453125, 3.7353515625,
  3.74755859375, 3.759765625, 3.77197265625, 3.7841796875, 3.79638671875,
  3.80859375, 3.82080078125, 3.8330078125, 3.84521484375, 3.857421875,
  3.86962890625, 3.8818359375, 3.89404296875, 3.90625, 3.91845703125,
  3.9306640625, 3.94287109375, 3.955078125, 3.96728515625, 3.9794921875,
  3.99169921875, 4.00390625, 4.01611328125, 4.0283203125, 4.04052734375,
  4.052734375, 4.06494140625, 4.0771484375, 4.08935546875, 4.1015625,
  4.11376953125, 4.1259765625, 4.13818359375, 4.150390625, 4.16259765625,
  4.1748046875, 4.18701171875, 4.19921875, 4.21142578125, 4.2236328125,
  4.23583984375, 4.248046875, 4.26025390625, 4.2724609375, 4.28466796875,
  4.296875, 4.30908203125, 4.3212890625, 4.33349609375, 4.345703125,
  4.35791015625, 4.3701171875, 4.38232421875, 4.39453125, 4.40673828125,
  4.4189453125, 4.43115234375, 4.443359375, 4.45556640625, 4.4677734375,
  4.47998046875, 4.4921875, 4.50439453125, 4.5166015625, 4.52880859375,
  4.541015625, 4.55322265625, 4.5654296875, 4.57763671875, 4.58984375,
  4.60205078125, 4.6142578125, 4.62646484375, 4.638671875, 4.65087890625,
  4.6630859375, 4.67529296875, 4.6875, 4.69970703125, 4.7119140625,
  4.72412109375, 4.736328125, 4.74853515625, 4.7607421875, 4.77294921875,
  4.78515625, 4.79736328125, 4.8095703125, 4.82177734375, 4.833984375,
  4.84619140625, 4.8583984375, 4.87060546875, 4.8828125, 4.89501953125,
  4.9072265625, 4.91943359375, 4.931640625, 4.94384765625, 4.9560546875,
  4.96826171875, 4.98046875, 4.99267578125, 5.0048828125, 5.01708984375,
  5.029296875, 5.04150390625, 5.0537109375, 5.06591796875, 5.078125,
  5.09033203125, 5.1025390625, 5.11474609375, 5.126953125, 5.13916015625,
  5.1513671875, 5.16357421875, 5.17578125, 5.18798828125, 5.2001953125,
  5.21240234375, 5.224609375, 5.23681640625, 5.2490234375, 5.26123046875,
  5.2734375, 5.28564453125, 5.2978515625, 5.31005859375, 5.322265625,
  5.33447265625, 5.3466796875, 5.35888671875, 5.37109375, 5.38330078125,
  5.3955078125, 5.40771484375, 5.419921875, 5.43212890625, 5.4443359375,
  5.45654296875, 5.46875, 5.48095703125, 5.4931640625, 5.50537109375,
  5.517578125, 5.52978515625, 5.5419921875, 5.55419921875, 5.56640625,
  5.57861328125, 5.5908203125, 5.60302734375, 5.615234375, 5.62744140625,
  5.6396484375, 5.65185546875, 5.6640625, 5.67626953125, 5.6884765625,
  5.70068359375, 5.712890625, 5.72509765625, 5.7373046875, 5.74951171875,
  5.76171875, 5.77392578125, 5.7861328125, 5.79833984375, 5.810546875,
  5.82275390625, 5.8349609375, 5.84716796875, 5.859375, 5.87158203125,
  5.8837890625, 5.89599609375, 5.908203125, 5.92041015625, 5.9326171875,
  5.94482421875, 5.95703125, 5.96923828125, 5.9814453125, 5.99365234375,
  6.005859375, 6.01806640625, 6.0302734375, 6.04248046875, 6.0546875,
  6.06689453125, 6.0791015625, 6.09130859375, 6.103515625, 6.11572265625,
  6.1279296875, 6.14013671875, 6.15234375, 6.16455078125, 6.1767578125,
  6.18896484375, 6.201171875, 6.21337890625, 6.2255859375, 6.23779296875, 6.25,
  6.26220703125, 6.2744140625, 6.28662109375, 6.298828125, 6.31103515625,
  6.3232421875, 6.33544921875, 6.34765625, 6.35986328125, 6.3720703125,
  6.38427734375, 6.396484375, 6.40869140625, 6.4208984375, 6.43310546875,
  6.4453125, 6.45751953125, 6.4697265625, 6.48193359375, 6.494140625,
  6.50634765625, 6.5185546875, 6.53076171875, 6.54296875, 6.55517578125,
  6.5673828125, 6.57958984375, 6.591796875, 6.60400390625, 6.6162109375,
  6.62841796875, 6.640625, 6.65283203125, 6.6650390625, 6.67724609375,
  6.689453125, 6.70166015625, 6.7138671875, 6.72607421875, 6.73828125,
  6.75048828125, 6.7626953125, 6.77490234375, 6.787109375, 6.79931640625,
  6.8115234375, 6.82373046875, 6.8359375, 6.84814453125, 6.8603515625,
  6.87255859375, 6.884765625, 6.89697265625, 6.9091796875, 6.92138671875,
  6.93359375, 6.94580078125, 6.9580078125, 6.97021484375, 6.982421875,
  6.99462890625, 7.0068359375, 7.01904296875, 7.03125, 7.04345703125,
  7.0556640625, 7.06787109375, 7.080078125, 7.09228515625, 7.1044921875,
  7.11669921875, 7.12890625, 7.14111328125, 7.1533203125, 7.16552734375,
  7.177734375, 7.18994140625, 7.2021484375, 7.21435546875, 7.2265625,
  7.23876953125, 7.2509765625, 7.26318359375, 7.275390625, 7.28759765625,
  7.2998046875, 7.31201171875, 7.32421875, 7.33642578125, 7.3486328125,
  7.36083984375, 7.373046875, 7.38525390625, 7.3974609375, 7.40966796875,
  7.421875, 7.43408203125, 7.4462890625, 7.45849609375, 7.470703125,
  7.48291015625, 7.4951171875, 7.50732421875, 7.51953125, 7.53173828125,
  7.5439453125, 7.55615234375, 7.568359375, 7.58056640625, 7.5927734375,
  7.60498046875, 7.6171875, 7.62939453125, 7.6416015625, 7.65380859375,
  7.666015625, 7.67822265625, 7.6904296875, 7.70263671875, 7.71484375,
  7.72705078125, 7.7392578125, 7.75146484375, 7.763671875, 7.77587890625,
  7.7880859375, 7.80029296875, 7.8125, 7.82470703125, 7.8369140625,
  7.84912109375, 7.861328125, 7.87353515625, 7.8857421875, 7.89794921875,
  7.91015625, 7.92236328125, 7.9345703125, 7.94677734375, 7.958984375,
  7.97119140625, 7.9833984375, 7.99560546875, 8.0078125, 8.02001953125,
  8.0322265625, 8.04443359375, 8.056640625, 8.06884765625, 8.0810546875,
  8.09326171875, 8.10546875, 8.11767578125, 8.1298828125, 8.14208984375,
  8.154296875, 8.16650390625, 8.1787109375, 8.19091796875, 8.203125,
  8.21533203125, 8.2275390625, 8.23974609375, 8.251953125, 8.26416015625,
  8.2763671875, 8.28857421875, 8.30078125, 8.31298828125, 8.3251953125,
  8.33740234375, 8.349609375, 8.36181640625, 8.3740234375, 8.38623046875,
  8.3984375, 8.41064453125, 8.4228515625, 8.43505859375, 8.447265625,
  8.45947265625, 8.4716796875, 8.48388671875, 8.49609375, 8.50830078125,
  8.5205078125, 8.53271484375, 8.544921875, 8.55712890625, 8.5693359375,
  8.58154296875, 8.59375, 8.60595703125, 8.6181640625, 8.63037109375,
  8.642578125, 8.65478515625, 8.6669921875, 8.67919921875, 8.69140625,
  8.70361328125, 8.7158203125, 8.72802734375, 8.740234375, 8.75244140625,
  8.7646484375, 8.77685546875, 8.7890625, 8.80126953125, 8.8134765625,
  8.82568359375, 8.837890625, 8.85009765625, 8.8623046875, 8.87451171875,
  8.88671875, 8.89892578125, 8.9111328125, 8.92333984375, 8.935546875,
  8.94775390625, 8.9599609375, 8.97216796875, 8.984375, 8.99658203125,
  9.0087890625, 9.02099609375, 9.033203125, 9.04541015625, 9.0576171875,
  9.06982421875, 9.08203125, 9.09423828125, 9.1064453125, 9.11865234375,
  9.130859375, 9.14306640625, 9.1552734375, 9.16748046875, 9.1796875,
  9.19189453125, 9.2041015625, 9.21630859375, 9.228515625, 9.24072265625,
  9.2529296875, 9.26513671875, 9.27734375, 9.28955078125, 9.3017578125,
  9.31396484375, 9.326171875, 9.33837890625, 9.3505859375, 9.36279296875, 9.375,
  9.38720703125, 9.3994140625, 9.41162109375, 9.423828125, 9.43603515625,
  9.4482421875, 9.46044921875, 9.47265625, 9.48486328125, 9.4970703125,
  9.50927734375, 9.521484375, 9.53369140625, 9.5458984375, 9.55810546875,
  9.5703125, 9.58251953125, 9.5947265625, 9.60693359375, 9.619140625,
  9.63134765625, 9.6435546875, 9.65576171875, 9.66796875, 9.68017578125,
  9.6923828125, 9.70458984375, 9.716796875, 9.72900390625, 9.7412109375,
  9.75341796875, 9.765625, 9.77783203125, 9.7900390625, 9.80224609375,
  9.814453125, 9.82666015625, 9.8388671875, 9.85107421875, 9.86328125,
  9.87548828125, 9.8876953125, 9.89990234375, 9.912109375, 9.92431640625,
  9.9365234375, 9.94873046875, 9.9609375, 9.97314453125, 9.9853515625,
  9.99755859375, 10.009765625, 10.02197265625, 10.0341796875, 10.04638671875,
  10.05859375, 10.07080078125, 10.0830078125, 10.09521484375, 10.107421875,
  10.11962890625, 10.1318359375, 10.14404296875, 10.15625, 10.16845703125,
  10.1806640625, 10.19287109375, 10.205078125, 10.21728515625, 10.2294921875,
  10.24169921875, 10.25390625, 10.26611328125, 10.2783203125, 10.29052734375,
  10.302734375, 10.31494140625, 10.3271484375, 10.33935546875, 10.3515625,
  10.36376953125, 10.3759765625, 10.38818359375, 10.400390625, 10.41259765625,
  10.4248046875, 10.43701171875, 10.44921875, 10.46142578125, 10.4736328125,
  10.48583984375, 10.498046875, 10.51025390625, 10.5224609375, 10.53466796875,
  10.546875, 10.55908203125, 10.5712890625, 10.58349609375, 10.595703125,
  10.60791015625, 10.6201171875, 10.63232421875, 10.64453125, 10.65673828125,
  10.6689453125, 10.68115234375, 10.693359375, 10.70556640625, 10.7177734375,
  10.72998046875, 10.7421875, 10.75439453125, 10.7666015625, 10.77880859375,
  10.791015625, 10.80322265625, 10.8154296875, 10.82763671875, 10.83984375,
  10.85205078125, 10.8642578125, 10.87646484375, 10.888671875, 10.90087890625,
  10.9130859375, 10.92529296875, 10.9375, 10.94970703125, 10.9619140625,
  10.97412109375, 10.986328125, 10.99853515625, 11.0107421875, 11.02294921875,
  11.03515625, 11.04736328125, 11.0595703125, 11.07177734375, 11.083984375,
  11.09619140625, 11.1083984375, 11.12060546875, 11.1328125, 11.14501953125,
  11.1572265625, 11.16943359375, 11.181640625, 11.19384765625, 11.2060546875,
  11.21826171875, 11.23046875, 11.24267578125, 11.2548828125, 11.26708984375,
  11.279296875, 11.29150390625, 11.3037109375, 11.31591796875, 11.328125,
  11.34033203125, 11.3525390625, 11.36474609375, 11.376953125, 11.38916015625,
  11.4013671875, 11.41357421875, 11.42578125, 11.43798828125, 11.4501953125,
  11.46240234375, 11.474609375, 11.48681640625, 11.4990234375, 11.51123046875,
  11.5234375, 11.53564453125, 11.5478515625, 11.56005859375, 11.572265625,
  11.58447265625, 11.5966796875, 11.60888671875, 11.62109375, 11.63330078125,
  11.6455078125, 11.65771484375, 11.669921875, 11.68212890625, 11.6943359375,
  11.70654296875, 11.71875, 11.73095703125, 11.7431640625, 11.75537109375,
  11.767578125, 11.77978515625, 11.7919921875, 11.80419921875, 11.81640625,
  11.82861328125, 11.8408203125, 11.85302734375, 11.865234375, 11.87744140625,
  11.8896484375, 11.90185546875, 11.9140625, 11.92626953125, 11.9384765625,
  11.95068359375, 11.962890625, 11.97509765625, 11.9873046875, 11.99951171875,
  12.01171875, 12.02392578125, 12.0361328125, 12.04833984375, 12.060546875,
  12.07275390625, 12.0849609375, 12.09716796875, 12.109375, 12.12158203125,
  12.1337890625, 12.14599609375, 12.158203125, 12.17041015625, 12.1826171875,
  12.19482421875, 12.20703125, 12.21923828125, 12.2314453125, 12.24365234375,
  12.255859375, 12.26806640625, 12.2802734375, 12.29248046875, 12.3046875,
  12.31689453125, 12.3291015625, 12.34130859375, 12.353515625, 12.36572265625,
  12.3779296875, 12.39013671875, 12.40234375, 12.41455078125, 12.4267578125,
  12.43896484375, 12.451171875, 12.46337890625, 12.4755859375, 12.48779296875,
  12.5, 12.51220703125, 12.5244140625, 12.53662109375, 12.548828125,
  12.56103515625, 12.5732421875, 12.58544921875, 12.59765625, 12.60986328125,
  12.6220703125, 12.63427734375, 12.646484375, 12.65869140625, 12.6708984375,
  12.68310546875, 12.6953125, 12.70751953125, 12.7197265625, 12.73193359375,
  12.744140625, 12.75634765625, 12.7685546875, 12.78076171875, 12.79296875,
  12.80517578125, 12.8173828125, 12.82958984375, 12.841796875, 12.85400390625,
  12.8662109375, 12.87841796875, 12.890625, 12.90283203125, 12.9150390625,
  12.92724609375, 12.939453125, 12.95166015625, 12.9638671875, 12.97607421875,
  12.98828125, 13.00048828125, 13.0126953125, 13.02490234375, 13.037109375,
  13.04931640625, 13.0615234375, 13.07373046875, 13.0859375, 13.09814453125,
  13.1103515625, 13.12255859375, 13.134765625, 13.14697265625, 13.1591796875,
  13.17138671875, 13.18359375, 13.19580078125, 13.2080078125, 13.22021484375,
  13.232421875, 13.24462890625, 13.2568359375, 13.26904296875, 13.28125,
  13.29345703125, 13.3056640625, 13.31787109375, 13.330078125, 13.34228515625,
  13.3544921875, 13.36669921875, 13.37890625, 13.39111328125, 13.4033203125,
  13.41552734375, 13.427734375, 13.43994140625, 13.4521484375, 13.46435546875,
  13.4765625, 13.48876953125, 13.5009765625, 13.51318359375, 13.525390625,
  13.53759765625, 13.5498046875, 13.56201171875, 13.57421875, 13.58642578125,
  13.5986328125, 13.61083984375, 13.623046875, 13.63525390625, 13.6474609375,
  13.65966796875, 13.671875, 13.68408203125, 13.6962890625, 13.70849609375,
  13.720703125, 13.73291015625, 13.7451171875, 13.75732421875, 13.76953125,
  13.78173828125, 13.7939453125, 13.80615234375, 13.818359375, 13.83056640625,
  13.8427734375, 13.85498046875, 13.8671875, 13.87939453125, 13.8916015625,
  13.90380859375, 13.916015625, 13.92822265625, 13.9404296875, 13.95263671875,
  13.96484375, 13.97705078125, 13.9892578125, 14.00146484375, 14.013671875,
  14.02587890625, 14.0380859375, 14.05029296875, 14.0625, 14.07470703125,
  14.0869140625, 14.09912109375, 14.111328125, 14.12353515625, 14.1357421875,
  14.14794921875, 14.16015625, 14.17236328125, 14.1845703125, 14.19677734375,
  14.208984375, 14.22119140625, 14.2333984375, 14.24560546875, 14.2578125,
  14.27001953125, 14.2822265625, 14.29443359375, 14.306640625, 14.31884765625,
  14.3310546875, 14.34326171875, 14.35546875, 14.36767578125, 14.3798828125,
  14.39208984375, 14.404296875, 14.41650390625, 14.4287109375, 14.44091796875,
  14.453125, 14.46533203125, 14.4775390625, 14.48974609375, 14.501953125,
  14.51416015625, 14.5263671875, 14.53857421875, 14.55078125, 14.56298828125,
  14.5751953125, 14.58740234375, 14.599609375, 14.61181640625, 14.6240234375,
  14.63623046875, 14.6484375, 14.66064453125, 14.6728515625, 14.68505859375,
  14.697265625, 14.70947265625, 14.7216796875, 14.73388671875, 14.74609375,
  14.75830078125, 14.7705078125, 14.78271484375, 14.794921875, 14.80712890625,
  14.8193359375, 14.83154296875, 14.84375, 14.85595703125, 14.8681640625,
  14.88037109375, 14.892578125, 14.90478515625, 14.9169921875, 14.92919921875,
  14.94140625, 14.95361328125, 14.9658203125, 14.97802734375, 14.990234375,
  15.00244140625, 15.0146484375, 15.02685546875, 15.0390625, 15.05126953125,
  15.0634765625, 15.07568359375, 15.087890625, 15.10009765625, 15.1123046875,
  15.12451171875, 15.13671875, 15.14892578125, 15.1611328125, 15.17333984375,
  15.185546875, 15.19775390625, 15.2099609375, 15.22216796875, 15.234375,
  15.24658203125, 15.2587890625, 15.27099609375, 15.283203125, 15.29541015625,
  15.3076171875, 15.31982421875, 15.33203125, 15.34423828125, 15.3564453125,
  15.36865234375, 15.380859375, 15.39306640625, 15.4052734375, 15.41748046875,
  15.4296875, 15.44189453125, 15.4541015625, 15.46630859375, 15.478515625,
  15.49072265625, 15.5029296875, 15.51513671875, 15.52734375, 15.53955078125,
  15.5517578125, 15.56396484375, 15.576171875, 15.58837890625, 15.6005859375,
  15.61279296875, 15.625, 15.63720703125, 15.6494140625, 15.66162109375,
  15.673828125, 15.68603515625, 15.6982421875, 15.71044921875, 15.72265625,
  15.73486328125, 15.7470703125, 15.75927734375, 15.771484375, 15.78369140625,
  15.7958984375, 15.80810546875, 15.8203125, 15.83251953125, 15.8447265625,
  15.85693359375, 15.869140625, 15.88134765625, 15.8935546875, 15.90576171875,
  15.91796875, 15.93017578125, 15.9423828125, 15.95458984375, 15.966796875,
  15.97900390625, 15.9912109375, 16.00341796875, 16.015625, 16.02783203125,
  16.0400390625, 16.05224609375, 16.064453125, 16.07666015625, 16.0888671875,
  16.10107421875, 16.11328125, 16.12548828125, 16.1376953125, 16.14990234375,
  16.162109375, 16.17431640625, 16.1865234375, 16.19873046875, 16.2109375,
  16.22314453125, 16.2353515625, 16.24755859375, 16.259765625, 16.27197265625,
  16.2841796875, 16.29638671875, 16.30859375, 16.32080078125, 16.3330078125,
  16.34521484375, 16.357421875, 16.36962890625, 16.3818359375, 16.39404296875,
  16.40625, 16.41845703125, 16.4306640625, 16.44287109375, 16.455078125,
  16.46728515625, 16.4794921875, 16.49169921875, 16.50390625, 16.51611328125,
  16.5283203125, 16.54052734375, 16.552734375, 16.56494140625, 16.5771484375,
  16.58935546875, 16.6015625, 16.61376953125, 16.6259765625, 16.63818359375,
  16.650390625, 16.66259765625, 16.6748046875, 16.68701171875, 16.69921875,
  16.71142578125, 16.7236328125, 16.73583984375, 16.748046875, 16.76025390625,
  16.7724609375, 16.78466796875, 16.796875, 16.80908203125, 16.8212890625,
  16.83349609375, 16.845703125, 16.85791015625, 16.8701171875, 16.88232421875,
  16.89453125, 16.90673828125, 16.9189453125, 16.93115234375, 16.943359375,
  16.95556640625, 16.9677734375, 16.97998046875, 16.9921875, 17.00439453125,
  17.0166015625, 17.02880859375, 17.041015625, 17.05322265625, 17.0654296875,
  17.07763671875, 17.08984375, 17.10205078125, 17.1142578125, 17.12646484375,
  17.138671875, 17.15087890625, 17.1630859375, 17.17529296875, 17.1875,
  17.19970703125, 17.2119140625, 17.22412109375, 17.236328125, 17.24853515625,
  17.2607421875, 17.27294921875, 17.28515625, 17.29736328125, 17.3095703125,
  17.32177734375, 17.333984375, 17.34619140625, 17.3583984375, 17.37060546875,
  17.3828125, 17.39501953125, 17.4072265625, 17.41943359375, 17.431640625,
  17.44384765625, 17.4560546875, 17.46826171875, 17.48046875, 17.49267578125,
  17.5048828125, 17.51708984375, 17.529296875, 17.54150390625, 17.5537109375,
  17.56591796875, 17.578125, 17.59033203125, 17.6025390625, 17.61474609375,
  17.626953125, 17.63916015625, 17.6513671875, 17.66357421875, 17.67578125,
  17.68798828125, 17.7001953125, 17.71240234375, 17.724609375, 17.73681640625,
  17.7490234375, 17.76123046875, 17.7734375, 17.78564453125, 17.7978515625,
  17.81005859375, 17.822265625, 17.83447265625, 17.8466796875, 17.85888671875,
  17.87109375, 17.88330078125, 17.8955078125, 17.90771484375, 17.919921875,
  17.93212890625, 17.9443359375, 17.95654296875, 17.96875, 17.98095703125,
  17.9931640625, 18.00537109375, 18.017578125, 18.02978515625, 18.0419921875,
  18.05419921875, 18.06640625, 18.07861328125, 18.0908203125, 18.10302734375,
  18.115234375, 18.12744140625, 18.1396484375, 18.15185546875, 18.1640625,
  18.17626953125, 18.1884765625, 18.20068359375, 18.212890625, 18.22509765625,
  18.2373046875, 18.24951171875, 18.26171875, 18.27392578125, 18.2861328125,
  18.29833984375, 18.310546875, 18.32275390625, 18.3349609375, 18.34716796875,
  18.359375, 18.37158203125, 18.3837890625, 18.39599609375, 18.408203125,
  18.42041015625, 18.4326171875, 18.44482421875, 18.45703125, 18.46923828125,
  18.4814453125, 18.49365234375, 18.505859375, 18.51806640625, 18.5302734375,
  18.54248046875, 18.5546875, 18.56689453125, 18.5791015625, 18.59130859375,
  18.603515625, 18.61572265625, 18.6279296875, 18.64013671875, 18.65234375,
  18.66455078125, 18.6767578125, 18.68896484375, 18.701171875, 18.71337890625,
  18.7255859375, 18.73779296875, 18.75, 18.76220703125, 18.7744140625,
  18.78662109375, 18.798828125, 18.81103515625, 18.8232421875, 18.83544921875,
  18.84765625, 18.85986328125, 18.8720703125, 18.88427734375, 18.896484375,
  18.90869140625, 18.9208984375, 18.93310546875, 18.9453125, 18.95751953125,
  18.9697265625, 18.98193359375, 18.994140625, 19.00634765625, 19.0185546875,
  19.03076171875, 19.04296875, 19.05517578125, 19.0673828125, 19.07958984375,
  19.091796875, 19.10400390625, 19.1162109375, 19.12841796875, 19.140625,
  19.15283203125, 19.1650390625, 19.17724609375, 19.189453125, 19.20166015625,
  19.2138671875, 19.22607421875, 19.23828125, 19.25048828125, 19.2626953125,
  19.27490234375, 19.287109375, 19.29931640625, 19.3115234375, 19.32373046875,
  19.3359375, 19.34814453125, 19.3603515625, 19.37255859375, 19.384765625,
  19.39697265625, 19.4091796875, 19.42138671875, 19.43359375, 19.44580078125,
  19.4580078125, 19.47021484375, 19.482421875, 19.49462890625, 19.5068359375,
  19.51904296875, 19.53125, 19.54345703125, 19.5556640625, 19.56787109375,
  19.580078125, 19.59228515625, 19.6044921875, 19.61669921875, 19.62890625,
  19.64111328125, 19.6533203125, 19.66552734375, 19.677734375, 19.68994140625,
  19.7021484375, 19.71435546875, 19.7265625, 19.73876953125, 19.7509765625,
  19.76318359375, 19.775390625, 19.78759765625, 19.7998046875, 19.81201171875,
  19.82421875, 19.83642578125, 19.8486328125, 19.86083984375, 19.873046875,
  19.88525390625, 19.8974609375, 19.90966796875, 19.921875, 19.93408203125,
  19.9462890625, 19.95849609375, 19.970703125, 19.98291015625, 19.9951171875,
  20.00732421875, 20.01953125, 20.03173828125, 20.0439453125, 20.05615234375,
  20.068359375, 20.08056640625, 20.0927734375, 20.10498046875, 20.1171875,
  20.12939453125, 20.1416015625, 20.15380859375, 20.166015625, 20.17822265625,
  20.1904296875, 20.20263671875, 20.21484375, 20.22705078125, 20.2392578125,
  20.25146484375, 20.263671875, 20.27587890625, 20.2880859375, 20.30029296875,
  20.3125, 20.32470703125, 20.3369140625, 20.34912109375, 20.361328125,
  20.37353515625, 20.3857421875, 20.39794921875, 20.41015625, 20.42236328125,
  20.4345703125, 20.44677734375, 20.458984375, 20.47119140625, 20.4833984375,
  20.49560546875, 20.5078125, 20.52001953125, 20.5322265625, 20.54443359375,
  20.556640625, 20.56884765625, 20.5810546875, 20.59326171875, 20.60546875,
  20.61767578125, 20.6298828125, 20.64208984375, 20.654296875, 20.66650390625,
  20.6787109375, 20.69091796875, 20.703125, 20.71533203125, 20.7275390625,
  20.73974609375, 20.751953125, 20.76416015625, 20.7763671875, 20.78857421875,
  20.80078125, 20.81298828125, 20.8251953125, 20.83740234375, 20.849609375,
  20.86181640625, 20.8740234375, 20.88623046875, 20.8984375, 20.91064453125,
  20.9228515625, 20.93505859375, 20.947265625, 20.95947265625, 20.9716796875,
  20.98388671875, 20.99609375, 21.00830078125, 21.0205078125, 21.03271484375,
  21.044921875, 21.05712890625, 21.0693359375, 21.08154296875, 21.09375,
  21.10595703125, 21.1181640625, 21.13037109375, 21.142578125, 21.15478515625,
  21.1669921875, 21.17919921875, 21.19140625, 21.20361328125, 21.2158203125,
  21.22802734375, 21.240234375, 21.25244140625, 21.2646484375, 21.27685546875,
  21.2890625, 21.30126953125, 21.3134765625, 21.32568359375, 21.337890625,
  21.35009765625, 21.3623046875, 21.37451171875, 21.38671875, 21.39892578125,
  21.4111328125, 21.42333984375, 21.435546875, 21.44775390625, 21.4599609375,
  21.47216796875, 21.484375, 21.49658203125, 21.5087890625, 21.52099609375,
  21.533203125, 21.54541015625, 21.5576171875, 21.56982421875, 21.58203125,
  21.59423828125, 21.6064453125, 21.61865234375, 21.630859375, 21.64306640625,
  21.6552734375, 21.66748046875, 21.6796875, 21.69189453125, 21.7041015625,
  21.71630859375, 21.728515625, 21.74072265625, 21.7529296875, 21.76513671875,
  21.77734375, 21.78955078125, 21.8017578125, 21.81396484375, 21.826171875,
  21.83837890625, 21.8505859375, 21.86279296875, 21.875, 21.88720703125,
  21.8994140625, 21.91162109375, 21.923828125, 21.93603515625, 21.9482421875,
  21.96044921875, 21.97265625, 21.98486328125, 21.9970703125, 22.00927734375,
  22.021484375, 22.03369140625, 22.0458984375, 22.05810546875, 22.0703125,
  22.08251953125, 22.0947265625, 22.10693359375, 22.119140625, 22.13134765625,
  22.1435546875, 22.15576171875, 22.16796875, 22.18017578125, 22.1923828125,
  22.20458984375, 22.216796875, 22.22900390625, 22.2412109375, 22.25341796875,
  22.265625, 22.27783203125, 22.2900390625, 22.30224609375, 22.314453125,
  22.32666015625, 22.3388671875, 22.35107421875, 22.36328125, 22.37548828125,
  22.3876953125, 22.39990234375, 22.412109375, 22.42431640625, 22.4365234375,
  22.44873046875, 22.4609375, 22.47314453125, 22.4853515625, 22.49755859375,
  22.509765625, 22.52197265625, 22.5341796875, 22.54638671875, 22.55859375,
  22.57080078125, 22.5830078125, 22.59521484375, 22.607421875, 22.61962890625,
  22.6318359375, 22.64404296875, 22.65625, 22.66845703125, 22.6806640625,
  22.69287109375, 22.705078125, 22.71728515625, 22.7294921875, 22.74169921875,
  22.75390625, 22.76611328125, 22.7783203125, 22.79052734375, 22.802734375,
  22.81494140625, 22.8271484375, 22.83935546875, 22.8515625, 22.86376953125,
  22.8759765625, 22.88818359375, 22.900390625, 22.91259765625, 22.9248046875,
  22.93701171875, 22.94921875, 22.96142578125, 22.9736328125, 22.98583984375,
  22.998046875, 23.01025390625, 23.0224609375, 23.03466796875, 23.046875,
  23.05908203125, 23.0712890625, 23.08349609375, 23.095703125, 23.10791015625,
  23.1201171875, 23.13232421875, 23.14453125, 23.15673828125, 23.1689453125,
  23.18115234375, 23.193359375, 23.20556640625, 23.2177734375, 23.22998046875,
  23.2421875, 23.25439453125, 23.2666015625, 23.27880859375, 23.291015625,
  23.30322265625, 23.3154296875, 23.32763671875, 23.33984375, 23.35205078125,
  23.3642578125, 23.37646484375, 23.388671875, 23.40087890625, 23.4130859375,
  23.42529296875, 23.4375, 23.44970703125, 23.4619140625, 23.47412109375,
  23.486328125, 23.49853515625, 23.5107421875, 23.52294921875, 23.53515625,
  23.54736328125, 23.5595703125, 23.57177734375, 23.583984375, 23.59619140625,
  23.6083984375, 23.62060546875, 23.6328125, 23.64501953125, 23.6572265625,
  23.66943359375, 23.681640625, 23.69384765625, 23.7060546875, 23.71826171875,
  23.73046875, 23.74267578125, 23.7548828125, 23.76708984375, 23.779296875,
  23.79150390625, 23.8037109375, 23.81591796875, 23.828125, 23.84033203125,
  23.8525390625, 23.86474609375, 23.876953125, 23.88916015625, 23.9013671875,
  23.91357421875, 23.92578125, 23.93798828125, 23.9501953125, 23.96240234375,
  23.974609375, 23.98681640625, 23.9990234375, 24.01123046875, 24.0234375,
  24.03564453125, 24.0478515625, 24.06005859375, 24.072265625, 24.08447265625,
  24.0966796875, 24.10888671875, 24.12109375, 24.13330078125, 24.1455078125,
  24.15771484375, 24.169921875, 24.18212890625, 24.1943359375, 24.20654296875,
  24.21875, 24.23095703125, 24.2431640625, 24.25537109375, 24.267578125,
  24.27978515625, 24.2919921875, 24.30419921875, 24.31640625, 24.32861328125,
  24.3408203125, 24.35302734375, 24.365234375, 24.37744140625, 24.3896484375,
  24.40185546875, 24.4140625, 24.42626953125, 24.4384765625, 24.45068359375,
  24.462890625, 24.47509765625, 24.4873046875, 24.49951171875, 24.51171875,
  24.52392578125, 24.5361328125, 24.54833984375, 24.560546875, 24.57275390625,
  24.5849609375, 24.59716796875, 24.609375, 24.62158203125, 24.6337890625,
  24.64599609375, 24.658203125, 24.67041015625, 24.6826171875, 24.69482421875,
  24.70703125, 24.71923828125, 24.7314453125, 24.74365234375, 24.755859375,
  24.76806640625, 24.7802734375, 24.79248046875, 24.8046875, 24.81689453125,
  24.8291015625, 24.84130859375, 24.853515625, 24.86572265625, 24.8779296875,
  24.89013671875, 24.90234375, 24.91455078125, 24.9267578125, 24.93896484375,
  24.951171875, 24.96337890625, 24.9755859375, 24.98779296875, 25.0,
  25.01220703125, 25.0244140625, 25.03662109375, 25.048828125, 25.06103515625,
  25.0732421875, 25.08544921875, 25.09765625, 25.10986328125, 25.1220703125,
  25.13427734375, 25.146484375, 25.15869140625, 25.1708984375, 25.18310546875,
  25.1953125, 25.20751953125, 25.2197265625, 25.23193359375, 25.244140625,
  25.25634765625, 25.2685546875, 25.28076171875, 25.29296875, 25.30517578125,
  25.3173828125, 25.32958984375, 25.341796875, 25.35400390625, 25.3662109375,
  25.37841796875, 25.390625, 25.40283203125, 25.4150390625, 25.42724609375,
  25.439453125, 25.45166015625, 25.4638671875, 25.47607421875, 25.48828125,
  25.50048828125, 25.5126953125, 25.52490234375, 25.537109375, 25.54931640625,
  25.5615234375, 25.57373046875, 25.5859375, 25.59814453125, 25.6103515625,
  25.62255859375, 25.634765625, 25.64697265625, 25.6591796875, 25.67138671875,
  25.68359375, 25.69580078125, 25.7080078125, 25.72021484375, 25.732421875,
  25.74462890625, 25.7568359375, 25.76904296875, 25.78125, 25.79345703125,
  25.8056640625, 25.81787109375, 25.830078125, 25.84228515625, 25.8544921875,
  25.86669921875, 25.87890625, 25.89111328125, 25.9033203125, 25.91552734375,
  25.927734375, 25.93994140625, 25.9521484375, 25.96435546875, 25.9765625,
  25.98876953125, 26.0009765625, 26.01318359375, 26.025390625, 26.03759765625,
  26.0498046875, 26.06201171875, 26.07421875, 26.08642578125, 26.0986328125,
  26.11083984375, 26.123046875, 26.13525390625, 26.1474609375, 26.15966796875,
  26.171875, 26.18408203125, 26.1962890625, 26.20849609375, 26.220703125,
  26.23291015625, 26.2451171875, 26.25732421875, 26.26953125, 26.28173828125,
  26.2939453125, 26.30615234375, 26.318359375, 26.33056640625, 26.3427734375,
  26.35498046875, 26.3671875, 26.37939453125, 26.3916015625, 26.40380859375,
  26.416015625, 26.42822265625, 26.4404296875, 26.45263671875, 26.46484375,
  26.47705078125, 26.4892578125, 26.50146484375, 26.513671875, 26.52587890625,
  26.5380859375, 26.55029296875, 26.5625, 26.57470703125, 26.5869140625,
  26.59912109375, 26.611328125, 26.62353515625, 26.6357421875, 26.64794921875,
  26.66015625, 26.67236328125, 26.6845703125, 26.69677734375, 26.708984375,
  26.72119140625, 26.7333984375, 26.74560546875, 26.7578125, 26.77001953125,
  26.7822265625, 26.79443359375, 26.806640625, 26.81884765625, 26.8310546875,
  26.84326171875, 26.85546875, 26.86767578125, 26.8798828125, 26.89208984375,
  26.904296875, 26.91650390625, 26.9287109375, 26.94091796875, 26.953125,
  26.96533203125, 26.9775390625, 26.98974609375, 27.001953125, 27.01416015625,
  27.0263671875, 27.03857421875, 27.05078125, 27.06298828125, 27.0751953125,
  27.08740234375, 27.099609375, 27.11181640625, 27.1240234375, 27.13623046875,
  27.1484375, 27.16064453125, 27.1728515625, 27.18505859375, 27.197265625,
  27.20947265625, 27.2216796875, 27.23388671875, 27.24609375, 27.25830078125,
  27.2705078125, 27.28271484375, 27.294921875, 27.30712890625, 27.3193359375,
  27.33154296875, 27.34375, 27.35595703125, 27.3681640625, 27.38037109375,
  27.392578125, 27.40478515625, 27.4169921875, 27.42919921875, 27.44140625,
  27.45361328125, 27.4658203125, 27.47802734375, 27.490234375, 27.50244140625,
  27.5146484375, 27.52685546875, 27.5390625, 27.55126953125, 27.5634765625,
  27.57568359375, 27.587890625, 27.60009765625, 27.6123046875, 27.62451171875,
  27.63671875, 27.64892578125, 27.6611328125, 27.67333984375, 27.685546875,
  27.69775390625, 27.7099609375, 27.72216796875, 27.734375, 27.74658203125,
  27.7587890625, 27.77099609375, 27.783203125, 27.79541015625, 27.8076171875,
  27.81982421875, 27.83203125, 27.84423828125, 27.8564453125, 27.86865234375,
  27.880859375, 27.89306640625, 27.9052734375, 27.91748046875, 27.9296875,
  27.94189453125, 27.9541015625, 27.96630859375, 27.978515625, 27.99072265625,
  28.0029296875, 28.01513671875, 28.02734375, 28.03955078125, 28.0517578125,
  28.06396484375, 28.076171875, 28.08837890625, 28.1005859375, 28.11279296875,
  28.125, 28.13720703125, 28.1494140625, 28.16162109375, 28.173828125,
  28.18603515625, 28.1982421875, 28.21044921875, 28.22265625, 28.23486328125,
  28.2470703125, 28.25927734375, 28.271484375, 28.28369140625, 28.2958984375,
  28.30810546875, 28.3203125, 28.33251953125, 28.3447265625, 28.35693359375,
  28.369140625, 28.38134765625, 28.3935546875, 28.40576171875, 28.41796875,
  28.43017578125, 28.4423828125, 28.45458984375, 28.466796875, 28.47900390625,
  28.4912109375, 28.50341796875, 28.515625, 28.52783203125, 28.5400390625,
  28.55224609375, 28.564453125, 28.57666015625, 28.5888671875, 28.60107421875,
  28.61328125, 28.62548828125, 28.6376953125, 28.64990234375, 28.662109375,
  28.67431640625, 28.6865234375, 28.69873046875, 28.7109375, 28.72314453125,
  28.7353515625, 28.74755859375, 28.759765625, 28.77197265625, 28.7841796875,
  28.79638671875, 28.80859375, 28.82080078125, 28.8330078125, 28.84521484375,
  28.857421875, 28.86962890625, 28.8818359375, 28.89404296875, 28.90625,
  28.91845703125, 28.9306640625, 28.94287109375, 28.955078125, 28.96728515625,
  28.9794921875, 28.99169921875, 29.00390625, 29.01611328125, 29.0283203125,
  29.04052734375, 29.052734375, 29.06494140625, 29.0771484375, 29.08935546875,
  29.1015625, 29.11376953125, 29.1259765625, 29.13818359375, 29.150390625,
  29.16259765625, 29.1748046875, 29.18701171875, 29.19921875, 29.21142578125,
  29.2236328125, 29.23583984375, 29.248046875, 29.26025390625, 29.2724609375,
  29.28466796875, 29.296875, 29.30908203125, 29.3212890625, 29.33349609375,
  29.345703125, 29.35791015625, 29.3701171875, 29.38232421875, 29.39453125,
  29.40673828125, 29.4189453125, 29.43115234375, 29.443359375, 29.45556640625,
  29.4677734375, 29.47998046875, 29.4921875, 29.50439453125, 29.5166015625,
  29.52880859375, 29.541015625, 29.55322265625, 29.5654296875, 29.57763671875,
  29.58984375, 29.60205078125, 29.6142578125, 29.62646484375, 29.638671875,
  29.65087890625, 29.6630859375, 29.67529296875, 29.6875, 29.69970703125,
  29.7119140625, 29.72412109375, 29.736328125, 29.74853515625, 29.7607421875,
  29.77294921875, 29.78515625, 29.79736328125, 29.8095703125, 29.82177734375,
  29.833984375, 29.84619140625, 29.8583984375, 29.87060546875, 29.8828125,
  29.89501953125, 29.9072265625, 29.91943359375, 29.931640625, 29.94384765625,
  29.9560546875, 29.96826171875, 29.98046875, 29.99267578125, 30.0048828125,
  30.01708984375, 30.029296875, 30.04150390625, 30.0537109375, 30.06591796875,
  30.078125, 30.09033203125, 30.1025390625, 30.11474609375, 30.126953125,
  30.13916015625, 30.1513671875, 30.16357421875, 30.17578125, 30.18798828125,
  30.2001953125, 30.21240234375, 30.224609375, 30.23681640625, 30.2490234375,
  30.26123046875, 30.2734375, 30.28564453125, 30.2978515625, 30.31005859375,
  30.322265625, 30.33447265625, 30.3466796875, 30.35888671875, 30.37109375,
  30.38330078125, 30.3955078125, 30.40771484375, 30.419921875, 30.43212890625,
  30.4443359375, 30.45654296875, 30.46875, 30.48095703125, 30.4931640625,
  30.50537109375, 30.517578125, 30.52978515625, 30.5419921875, 30.55419921875,
  30.56640625, 30.57861328125, 30.5908203125, 30.60302734375, 30.615234375,
  30.62744140625, 30.6396484375, 30.65185546875, 30.6640625, 30.67626953125,
  30.6884765625, 30.70068359375, 30.712890625, 30.72509765625, 30.7373046875,
  30.74951171875, 30.76171875, 30.77392578125, 30.7861328125, 30.79833984375,
  30.810546875, 30.82275390625, 30.8349609375, 30.84716796875, 30.859375,
  30.87158203125, 30.8837890625, 30.89599609375, 30.908203125, 30.92041015625,
  30.9326171875, 30.94482421875, 30.95703125, 30.96923828125, 30.9814453125,
  30.99365234375, 31.005859375, 31.01806640625, 31.0302734375, 31.04248046875,
  31.0546875, 31.06689453125, 31.0791015625, 31.09130859375, 31.103515625,
  31.11572265625, 31.1279296875, 31.14013671875, 31.15234375, 31.16455078125,
  31.1767578125, 31.18896484375, 31.201171875, 31.21337890625, 31.2255859375,
  31.23779296875, 31.25, 31.26220703125, 31.2744140625, 31.28662109375,
  31.298828125, 31.31103515625, 31.3232421875, 31.33544921875, 31.34765625,
  31.35986328125, 31.3720703125, 31.38427734375, 31.396484375, 31.40869140625,
  31.4208984375, 31.43310546875, 31.4453125, 31.45751953125, 31.4697265625,
  31.48193359375, 31.494140625, 31.50634765625, 31.5185546875, 31.53076171875,
  31.54296875, 31.55517578125, 31.5673828125, 31.57958984375, 31.591796875,
  31.60400390625, 31.6162109375, 31.62841796875, 31.640625, 31.65283203125,
  31.6650390625, 31.67724609375, 31.689453125, 31.70166015625, 31.7138671875,
  31.72607421875, 31.73828125, 31.75048828125, 31.7626953125, 31.77490234375,
  31.787109375, 31.79931640625, 31.8115234375, 31.82373046875, 31.8359375,
  31.84814453125, 31.8603515625, 31.87255859375, 31.884765625, 31.89697265625,
  31.9091796875, 31.92138671875, 31.93359375, 31.94580078125, 31.9580078125,
  31.97021484375, 31.982421875, 31.99462890625, 32.0068359375, 32.01904296875,
  32.03125, 32.04345703125, 32.0556640625, 32.06787109375, 32.080078125,
  32.09228515625, 32.1044921875, 32.11669921875, 32.12890625, 32.14111328125,
  32.1533203125, 32.16552734375, 32.177734375, 32.18994140625, 32.2021484375,
  32.21435546875, 32.2265625, 32.23876953125, 32.2509765625, 32.26318359375,
  32.275390625, 32.28759765625, 32.2998046875, 32.31201171875, 32.32421875,
  32.33642578125, 32.3486328125, 32.36083984375, 32.373046875, 32.38525390625,
  32.3974609375, 32.40966796875, 32.421875, 32.43408203125, 32.4462890625,
  32.45849609375, 32.470703125, 32.48291015625, 32.4951171875, 32.50732421875,
  32.51953125, 32.53173828125, 32.5439453125, 32.55615234375, 32.568359375,
  32.58056640625, 32.5927734375, 32.60498046875, 32.6171875, 32.62939453125,
  32.6416015625, 32.65380859375, 32.666015625, 32.67822265625, 32.6904296875,
  32.70263671875, 32.71484375, 32.72705078125, 32.7392578125, 32.75146484375,
  32.763671875, 32.77587890625, 32.7880859375, 32.80029296875, 32.8125,
  32.82470703125, 32.8369140625, 32.84912109375, 32.861328125, 32.87353515625,
  32.8857421875, 32.89794921875, 32.91015625, 32.92236328125, 32.9345703125,
  32.94677734375, 32.958984375, 32.97119140625, 32.9833984375, 32.99560546875,
  33.0078125, 33.02001953125, 33.0322265625, 33.04443359375, 33.056640625,
  33.06884765625, 33.0810546875, 33.09326171875, 33.10546875, 33.11767578125,
  33.1298828125, 33.14208984375, 33.154296875, 33.16650390625, 33.1787109375,
  33.19091796875, 33.203125, 33.21533203125, 33.2275390625, 33.23974609375,
  33.251953125, 33.26416015625, 33.2763671875, 33.28857421875, 33.30078125,
  33.31298828125, 33.3251953125, 33.33740234375, 33.349609375, 33.36181640625,
  33.3740234375, 33.38623046875, 33.3984375, 33.41064453125, 33.4228515625,
  33.43505859375, 33.447265625, 33.45947265625, 33.4716796875, 33.48388671875,
  33.49609375, 33.50830078125, 33.5205078125, 33.53271484375, 33.544921875,
  33.55712890625, 33.5693359375, 33.58154296875, 33.59375, 33.60595703125,
  33.6181640625, 33.63037109375, 33.642578125, 33.65478515625, 33.6669921875,
  33.67919921875, 33.69140625, 33.70361328125, 33.7158203125, 33.72802734375,
  33.740234375, 33.75244140625, 33.7646484375, 33.77685546875, 33.7890625,
  33.80126953125, 33.8134765625, 33.82568359375, 33.837890625, 33.85009765625,
  33.8623046875, 33.87451171875, 33.88671875, 33.89892578125, 33.9111328125,
  33.92333984375, 33.935546875, 33.94775390625, 33.9599609375, 33.97216796875,
  33.984375, 33.99658203125, 34.0087890625, 34.02099609375, 34.033203125,
  34.04541015625, 34.0576171875, 34.06982421875, 34.08203125, 34.09423828125,
  34.1064453125, 34.11865234375, 34.130859375, 34.14306640625, 34.1552734375,
  34.16748046875, 34.1796875, 34.19189453125, 34.2041015625, 34.21630859375,
  34.228515625, 34.24072265625, 34.2529296875, 34.26513671875, 34.27734375,
  34.28955078125, 34.3017578125, 34.31396484375, 34.326171875, 34.33837890625,
  34.3505859375, 34.36279296875, 34.375, 34.38720703125, 34.3994140625,
  34.41162109375, 34.423828125, 34.43603515625, 34.4482421875, 34.46044921875,
  34.47265625, 34.48486328125, 34.4970703125, 34.50927734375, 34.521484375,
  34.53369140625, 34.5458984375, 34.55810546875, 34.5703125, 34.58251953125,
  34.5947265625, 34.60693359375, 34.619140625, 34.63134765625, 34.6435546875,
  34.65576171875, 34.66796875, 34.68017578125, 34.6923828125, 34.70458984375,
  34.716796875, 34.72900390625, 34.7412109375, 34.75341796875, 34.765625,
  34.77783203125, 34.7900390625, 34.80224609375, 34.814453125, 34.82666015625,
  34.8388671875, 34.85107421875, 34.86328125, 34.87548828125, 34.8876953125,
  34.89990234375, 34.912109375, 34.92431640625, 34.9365234375, 34.94873046875,
  34.9609375, 34.97314453125, 34.9853515625, 34.99755859375, 35.009765625,
  35.02197265625, 35.0341796875, 35.04638671875, 35.05859375, 35.07080078125,
  35.0830078125, 35.09521484375, 35.107421875, 35.11962890625, 35.1318359375,
  35.14404296875, 35.15625, 35.16845703125, 35.1806640625, 35.19287109375,
  35.205078125, 35.21728515625, 35.2294921875, 35.24169921875, 35.25390625,
  35.26611328125, 35.2783203125, 35.29052734375, 35.302734375, 35.31494140625,
  35.3271484375, 35.33935546875, 35.3515625, 35.36376953125, 35.3759765625,
  35.38818359375, 35.400390625, 35.41259765625, 35.4248046875, 35.43701171875,
  35.44921875, 35.46142578125, 35.4736328125, 35.48583984375, 35.498046875,
  35.51025390625, 35.5224609375, 35.53466796875, 35.546875, 35.55908203125,
  35.5712890625, 35.58349609375, 35.595703125, 35.60791015625, 35.6201171875,
  35.63232421875, 35.64453125, 35.65673828125, 35.6689453125, 35.68115234375,
  35.693359375, 35.70556640625, 35.7177734375, 35.72998046875, 35.7421875,
  35.75439453125, 35.7666015625, 35.77880859375, 35.791015625, 35.80322265625,
  35.8154296875, 35.82763671875, 35.83984375, 35.85205078125, 35.8642578125,
  35.87646484375, 35.888671875, 35.90087890625, 35.9130859375, 35.92529296875,
  35.9375, 35.94970703125, 35.9619140625, 35.97412109375, 35.986328125,
  35.99853515625, 36.0107421875, 36.02294921875, 36.03515625, 36.04736328125,
  36.0595703125, 36.07177734375, 36.083984375, 36.09619140625, 36.1083984375,
  36.12060546875, 36.1328125, 36.14501953125, 36.1572265625, 36.16943359375,
  36.181640625, 36.19384765625, 36.2060546875, 36.21826171875, 36.23046875,
  36.24267578125, 36.2548828125, 36.26708984375, 36.279296875, 36.29150390625,
  36.3037109375, 36.31591796875, 36.328125, 36.34033203125, 36.3525390625,
  36.36474609375, 36.376953125, 36.38916015625, 36.4013671875, 36.41357421875,
  36.42578125, 36.43798828125, 36.4501953125, 36.46240234375, 36.474609375,
  36.48681640625, 36.4990234375, 36.51123046875, 36.5234375, 36.53564453125,
  36.5478515625, 36.56005859375, 36.572265625, 36.58447265625, 36.5966796875,
  36.60888671875, 36.62109375, 36.63330078125, 36.6455078125, 36.65771484375,
  36.669921875, 36.68212890625, 36.6943359375, 36.70654296875, 36.71875,
  36.73095703125, 36.7431640625, 36.75537109375, 36.767578125, 36.77978515625,
  36.7919921875, 36.80419921875, 36.81640625, 36.82861328125, 36.8408203125,
  36.85302734375, 36.865234375, 36.87744140625, 36.8896484375, 36.90185546875,
  36.9140625, 36.92626953125, 36.9384765625, 36.95068359375, 36.962890625,
  36.97509765625, 36.9873046875, 36.99951171875, 37.01171875, 37.02392578125,
  37.0361328125, 37.04833984375, 37.060546875, 37.07275390625, 37.0849609375,
  37.09716796875, 37.109375, 37.12158203125, 37.1337890625, 37.14599609375,
  37.158203125, 37.17041015625, 37.1826171875, 37.19482421875, 37.20703125,
  37.21923828125, 37.2314453125, 37.24365234375, 37.255859375, 37.26806640625,
  37.2802734375, 37.29248046875, 37.3046875, 37.31689453125, 37.3291015625,
  37.34130859375, 37.353515625, 37.36572265625, 37.3779296875, 37.39013671875,
  37.40234375, 37.41455078125, 37.4267578125, 37.43896484375, 37.451171875,
  37.46337890625, 37.4755859375, 37.48779296875, 37.5, 37.51220703125,
  37.5244140625, 37.53662109375, 37.548828125, 37.56103515625, 37.5732421875,
  37.58544921875, 37.59765625, 37.60986328125, 37.6220703125, 37.63427734375,
  37.646484375, 37.65869140625, 37.6708984375, 37.68310546875, 37.6953125,
  37.70751953125, 37.7197265625, 37.73193359375, 37.744140625, 37.75634765625,
  37.7685546875, 37.78076171875, 37.79296875, 37.80517578125, 37.8173828125,
  37.82958984375, 37.841796875, 37.85400390625, 37.8662109375, 37.87841796875,
  37.890625, 37.90283203125, 37.9150390625, 37.92724609375, 37.939453125,
  37.95166015625, 37.9638671875, 37.97607421875, 37.98828125, 38.00048828125,
  38.0126953125, 38.02490234375, 38.037109375, 38.04931640625, 38.0615234375,
  38.07373046875, 38.0859375, 38.09814453125, 38.1103515625, 38.12255859375,
  38.134765625, 38.14697265625, 38.1591796875, 38.17138671875, 38.18359375,
  38.19580078125, 38.2080078125, 38.22021484375, 38.232421875, 38.24462890625,
  38.2568359375, 38.26904296875, 38.28125, 38.29345703125, 38.3056640625,
  38.31787109375, 38.330078125, 38.34228515625, 38.3544921875, 38.36669921875,
  38.37890625, 38.39111328125, 38.4033203125, 38.41552734375, 38.427734375,
  38.43994140625, 38.4521484375, 38.46435546875, 38.4765625, 38.48876953125,
  38.5009765625, 38.51318359375, 38.525390625, 38.53759765625, 38.5498046875,
  38.56201171875, 38.57421875, 38.58642578125, 38.5986328125, 38.61083984375,
  38.623046875, 38.63525390625, 38.6474609375, 38.65966796875, 38.671875,
  38.68408203125, 38.6962890625, 38.70849609375, 38.720703125, 38.73291015625,
  38.7451171875, 38.75732421875, 38.76953125, 38.78173828125, 38.7939453125,
  38.80615234375, 38.818359375, 38.83056640625, 38.8427734375, 38.85498046875,
  38.8671875, 38.87939453125, 38.8916015625, 38.90380859375, 38.916015625,
  38.92822265625, 38.9404296875, 38.95263671875, 38.96484375, 38.97705078125,
  38.9892578125, 39.00146484375, 39.013671875, 39.02587890625, 39.0380859375,
  39.05029296875, 39.0625, 39.07470703125, 39.0869140625, 39.09912109375,
  39.111328125, 39.12353515625, 39.1357421875, 39.14794921875, 39.16015625,
  39.17236328125, 39.1845703125, 39.19677734375, 39.208984375, 39.22119140625,
  39.2333984375, 39.24560546875, 39.2578125, 39.27001953125, 39.2822265625,
  39.29443359375, 39.306640625, 39.31884765625, 39.3310546875, 39.34326171875,
  39.35546875, 39.36767578125, 39.3798828125, 39.39208984375, 39.404296875,
  39.41650390625, 39.4287109375, 39.44091796875, 39.453125, 39.46533203125,
  39.4775390625, 39.48974609375, 39.501953125, 39.51416015625, 39.5263671875,
  39.53857421875, 39.55078125, 39.56298828125, 39.5751953125, 39.58740234375,
  39.599609375, 39.61181640625, 39.6240234375, 39.63623046875, 39.6484375,
  39.66064453125, 39.6728515625, 39.68505859375, 39.697265625, 39.70947265625,
  39.7216796875, 39.73388671875, 39.74609375, 39.75830078125, 39.7705078125,
  39.78271484375, 39.794921875, 39.80712890625, 39.8193359375, 39.83154296875,
  39.84375, 39.85595703125, 39.8681640625, 39.88037109375, 39.892578125,
  39.90478515625, 39.9169921875, 39.92919921875, 39.94140625, 39.95361328125,
  39.9658203125, 39.97802734375, 39.990234375, 40.00244140625, 40.0146484375,
  40.02685546875, 40.0390625, 40.05126953125, 40.0634765625, 40.07568359375,
  40.087890625, 40.10009765625, 40.1123046875, 40.12451171875, 40.13671875,
  40.14892578125, 40.1611328125, 40.17333984375, 40.185546875, 40.19775390625,
  40.2099609375, 40.22216796875, 40.234375, 40.24658203125, 40.2587890625,
  40.27099609375, 40.283203125, 40.29541015625, 40.3076171875, 40.31982421875,
  40.33203125, 40.34423828125, 40.3564453125, 40.36865234375, 40.380859375,
  40.39306640625, 40.4052734375, 40.41748046875, 40.4296875, 40.44189453125,
  40.4541015625, 40.46630859375, 40.478515625, 40.49072265625, 40.5029296875,
  40.51513671875, 40.52734375, 40.53955078125, 40.5517578125, 40.56396484375,
  40.576171875, 40.58837890625, 40.6005859375, 40.61279296875, 40.625,
  40.63720703125, 40.6494140625, 40.66162109375, 40.673828125, 40.68603515625,
  40.6982421875, 40.71044921875, 40.72265625, 40.73486328125, 40.7470703125,
  40.75927734375, 40.771484375, 40.78369140625, 40.7958984375, 40.80810546875,
  40.8203125, 40.83251953125, 40.8447265625, 40.85693359375, 40.869140625,
  40.88134765625, 40.8935546875, 40.90576171875, 40.91796875, 40.93017578125,
  40.9423828125, 40.95458984375, 40.966796875, 40.97900390625, 40.9912109375,
  41.00341796875, 41.015625, 41.02783203125, 41.0400390625, 41.05224609375,
  41.064453125, 41.07666015625, 41.0888671875, 41.10107421875, 41.11328125,
  41.12548828125, 41.1376953125, 41.14990234375, 41.162109375, 41.17431640625,
  41.1865234375, 41.19873046875, 41.2109375, 41.22314453125, 41.2353515625,
  41.24755859375, 41.259765625, 41.27197265625, 41.2841796875, 41.29638671875,
  41.30859375, 41.32080078125, 41.3330078125, 41.34521484375, 41.357421875,
  41.36962890625, 41.3818359375, 41.39404296875, 41.40625, 41.41845703125,
  41.4306640625, 41.44287109375, 41.455078125, 41.46728515625, 41.4794921875,
  41.49169921875, 41.50390625, 41.51611328125, 41.5283203125, 41.54052734375,
  41.552734375, 41.56494140625, 41.5771484375, 41.58935546875, 41.6015625,
  41.61376953125, 41.6259765625, 41.63818359375, 41.650390625, 41.66259765625,
  41.6748046875, 41.68701171875, 41.69921875, 41.71142578125, 41.7236328125,
  41.73583984375, 41.748046875, 41.76025390625, 41.7724609375, 41.78466796875,
  41.796875, 41.80908203125, 41.8212890625, 41.83349609375, 41.845703125,
  41.85791015625, 41.8701171875, 41.88232421875, 41.89453125, 41.90673828125,
  41.9189453125, 41.93115234375, 41.943359375, 41.95556640625, 41.9677734375,
  41.97998046875, 41.9921875, 42.00439453125, 42.0166015625, 42.02880859375,
  42.041015625, 42.05322265625, 42.0654296875, 42.07763671875, 42.08984375,
  42.10205078125, 42.1142578125, 42.12646484375, 42.138671875, 42.15087890625,
  42.1630859375, 42.17529296875, 42.1875, 42.19970703125, 42.2119140625,
  42.22412109375, 42.236328125, 42.24853515625, 42.2607421875, 42.27294921875,
  42.28515625, 42.29736328125, 42.3095703125, 42.32177734375, 42.333984375,
  42.34619140625, 42.3583984375, 42.37060546875, 42.3828125, 42.39501953125,
  42.4072265625, 42.41943359375, 42.431640625, 42.44384765625, 42.4560546875,
  42.46826171875, 42.48046875, 42.49267578125, 42.5048828125, 42.51708984375,
  42.529296875, 42.54150390625, 42.5537109375, 42.56591796875, 42.578125,
  42.59033203125, 42.6025390625, 42.61474609375, 42.626953125, 42.63916015625,
  42.6513671875, 42.66357421875, 42.67578125, 42.68798828125, 42.7001953125,
  42.71240234375, 42.724609375, 42.73681640625, 42.7490234375, 42.76123046875,
  42.7734375, 42.78564453125, 42.7978515625, 42.81005859375, 42.822265625,
  42.83447265625, 42.8466796875, 42.85888671875, 42.87109375, 42.88330078125,
  42.8955078125, 42.90771484375, 42.919921875, 42.93212890625, 42.9443359375,
  42.95654296875, 42.96875, 42.98095703125, 42.9931640625, 43.00537109375,
  43.017578125, 43.02978515625, 43.0419921875, 43.05419921875, 43.06640625,
  43.07861328125, 43.0908203125, 43.10302734375, 43.115234375, 43.12744140625,
  43.1396484375, 43.15185546875, 43.1640625, 43.17626953125, 43.1884765625,
  43.20068359375, 43.212890625, 43.22509765625, 43.2373046875, 43.24951171875,
  43.26171875, 43.27392578125, 43.2861328125, 43.29833984375, 43.310546875,
  43.32275390625, 43.3349609375, 43.34716796875, 43.359375, 43.37158203125,
  43.3837890625, 43.39599609375, 43.408203125, 43.42041015625, 43.4326171875,
  43.44482421875, 43.45703125, 43.46923828125, 43.4814453125, 43.49365234375,
  43.505859375, 43.51806640625, 43.5302734375, 43.54248046875, 43.5546875,
  43.56689453125, 43.5791015625, 43.59130859375, 43.603515625, 43.61572265625,
  43.6279296875, 43.64013671875, 43.65234375, 43.66455078125, 43.6767578125,
  43.68896484375, 43.701171875, 43.71337890625, 43.7255859375, 43.73779296875,
  43.75, 43.76220703125, 43.7744140625, 43.78662109375, 43.798828125,
  43.81103515625, 43.8232421875, 43.83544921875, 43.84765625, 43.85986328125,
  43.8720703125, 43.88427734375, 43.896484375, 43.90869140625, 43.9208984375,
  43.93310546875, 43.9453125, 43.95751953125, 43.9697265625, 43.98193359375,
  43.994140625, 44.00634765625, 44.0185546875, 44.03076171875, 44.04296875,
  44.05517578125, 44.0673828125, 44.07958984375, 44.091796875, 44.10400390625,
  44.1162109375, 44.12841796875, 44.140625, 44.15283203125, 44.1650390625,
  44.17724609375, 44.189453125, 44.20166015625, 44.2138671875, 44.22607421875,
  44.23828125, 44.25048828125, 44.2626953125, 44.27490234375, 44.287109375,
  44.29931640625, 44.3115234375, 44.32373046875, 44.3359375, 44.34814453125,
  44.3603515625, 44.37255859375, 44.384765625, 44.39697265625, 44.4091796875,
  44.42138671875, 44.43359375, 44.44580078125, 44.4580078125, 44.47021484375,
  44.482421875, 44.49462890625, 44.5068359375, 44.51904296875, 44.53125,
  44.54345703125, 44.5556640625, 44.56787109375, 44.580078125, 44.59228515625,
  44.6044921875, 44.61669921875, 44.62890625, 44.64111328125, 44.6533203125,
  44.66552734375, 44.677734375, 44.68994140625, 44.7021484375, 44.71435546875,
  44.7265625, 44.73876953125, 44.7509765625, 44.76318359375, 44.775390625,
  44.78759765625, 44.7998046875, 44.81201171875, 44.82421875, 44.83642578125,
  44.8486328125, 44.86083984375, 44.873046875, 44.88525390625, 44.8974609375,
  44.90966796875, 44.921875, 44.93408203125, 44.9462890625, 44.95849609375,
  44.970703125, 44.98291015625, 44.9951171875, 45.00732421875, 45.01953125,
  45.03173828125, 45.0439453125, 45.05615234375, 45.068359375, 45.08056640625,
  45.0927734375, 45.10498046875, 45.1171875, 45.12939453125, 45.1416015625,
  45.15380859375, 45.166015625, 45.17822265625, 45.1904296875, 45.20263671875,
  45.21484375, 45.22705078125, 45.2392578125, 45.25146484375, 45.263671875,
  45.27587890625, 45.2880859375, 45.30029296875, 45.3125, 45.32470703125,
  45.3369140625, 45.34912109375, 45.361328125, 45.37353515625, 45.3857421875,
  45.39794921875, 45.41015625, 45.42236328125, 45.4345703125, 45.44677734375,
  45.458984375, 45.47119140625, 45.4833984375, 45.49560546875, 45.5078125,
  45.52001953125, 45.5322265625, 45.54443359375, 45.556640625, 45.56884765625,
  45.5810546875, 45.59326171875, 45.60546875, 45.61767578125, 45.6298828125,
  45.64208984375, 45.654296875, 45.66650390625, 45.6787109375, 45.69091796875,
  45.703125, 45.71533203125, 45.7275390625, 45.73974609375, 45.751953125,
  45.76416015625, 45.7763671875, 45.78857421875, 45.80078125, 45.81298828125,
  45.8251953125, 45.83740234375, 45.849609375, 45.86181640625, 45.8740234375,
  45.88623046875, 45.8984375, 45.91064453125, 45.9228515625, 45.93505859375,
  45.947265625, 45.95947265625, 45.9716796875, 45.98388671875, 45.99609375,
  46.00830078125, 46.0205078125, 46.03271484375, 46.044921875, 46.05712890625,
  46.0693359375, 46.08154296875, 46.09375, 46.10595703125, 46.1181640625,
  46.13037109375, 46.142578125, 46.15478515625, 46.1669921875, 46.17919921875,
  46.19140625, 46.20361328125, 46.2158203125, 46.22802734375, 46.240234375,
  46.25244140625, 46.2646484375, 46.27685546875, 46.2890625, 46.30126953125,
  46.3134765625, 46.32568359375, 46.337890625, 46.35009765625, 46.3623046875,
  46.37451171875, 46.38671875, 46.39892578125, 46.4111328125, 46.42333984375,
  46.435546875, 46.44775390625, 46.4599609375, 46.47216796875, 46.484375,
  46.49658203125, 46.5087890625, 46.52099609375, 46.533203125, 46.54541015625,
  46.5576171875, 46.56982421875, 46.58203125, 46.59423828125, 46.6064453125,
  46.61865234375, 46.630859375, 46.64306640625, 46.6552734375, 46.66748046875,
  46.6796875, 46.69189453125, 46.7041015625, 46.71630859375, 46.728515625,
  46.74072265625, 46.7529296875, 46.76513671875, 46.77734375, 46.78955078125,
  46.8017578125, 46.81396484375, 46.826171875, 46.83837890625, 46.8505859375,
  46.86279296875, 46.875, 46.88720703125, 46.8994140625, 46.91162109375,
  46.923828125, 46.93603515625, 46.9482421875, 46.96044921875, 46.97265625,
  46.98486328125, 46.9970703125, 47.00927734375, 47.021484375, 47.03369140625,
  47.0458984375, 47.05810546875, 47.0703125, 47.08251953125, 47.0947265625,
  47.10693359375, 47.119140625, 47.13134765625, 47.1435546875, 47.15576171875,
  47.16796875, 47.18017578125, 47.1923828125, 47.20458984375, 47.216796875,
  47.22900390625, 47.2412109375, 47.25341796875, 47.265625, 47.27783203125,
  47.2900390625, 47.30224609375, 47.314453125, 47.32666015625, 47.3388671875,
  47.35107421875, 47.36328125, 47.37548828125, 47.3876953125, 47.39990234375,
  47.412109375, 47.42431640625, 47.4365234375, 47.44873046875, 47.4609375,
  47.47314453125, 47.4853515625, 47.49755859375, 47.509765625, 47.52197265625,
  47.5341796875, 47.54638671875, 47.55859375, 47.57080078125, 47.5830078125,
  47.59521484375, 47.607421875, 47.61962890625, 47.6318359375, 47.64404296875,
  47.65625, 47.66845703125, 47.6806640625, 47.69287109375, 47.705078125,
  47.71728515625, 47.7294921875, 47.74169921875, 47.75390625, 47.76611328125,
  47.7783203125, 47.79052734375, 47.802734375, 47.81494140625, 47.8271484375,
  47.83935546875, 47.8515625, 47.86376953125, 47.8759765625, 47.88818359375,
  47.900390625, 47.91259765625, 47.9248046875, 47.93701171875, 47.94921875,
  47.96142578125, 47.9736328125, 47.98583984375, 47.998046875, 48.01025390625,
  48.0224609375, 48.03466796875, 48.046875, 48.05908203125, 48.0712890625,
  48.08349609375, 48.095703125, 48.10791015625, 48.1201171875, 48.13232421875,
  48.14453125, 48.15673828125, 48.1689453125, 48.18115234375, 48.193359375,
  48.20556640625, 48.2177734375, 48.22998046875, 48.2421875, 48.25439453125,
  48.2666015625, 48.27880859375, 48.291015625, 48.30322265625, 48.3154296875,
  48.32763671875, 48.33984375, 48.35205078125, 48.3642578125, 48.37646484375,
  48.388671875, 48.40087890625, 48.4130859375, 48.42529296875, 48.4375,
  48.44970703125, 48.4619140625, 48.47412109375, 48.486328125, 48.49853515625,
  48.5107421875, 48.52294921875, 48.53515625, 48.54736328125, 48.5595703125,
  48.57177734375, 48.583984375, 48.59619140625, 48.6083984375, 48.62060546875,
  48.6328125, 48.64501953125, 48.6572265625, 48.66943359375, 48.681640625,
  48.69384765625, 48.7060546875, 48.71826171875, 48.73046875, 48.74267578125,
  48.7548828125, 48.76708984375, 48.779296875, 48.79150390625, 48.8037109375,
  48.81591796875, 48.828125, 48.84033203125, 48.8525390625, 48.86474609375,
  48.876953125, 48.88916015625, 48.9013671875, 48.91357421875, 48.92578125,
  48.93798828125, 48.9501953125, 48.96240234375, 48.974609375, 48.98681640625,
  48.9990234375, 49.01123046875, 49.0234375, 49.03564453125, 49.0478515625,
  49.06005859375, 49.072265625, 49.08447265625, 49.0966796875, 49.10888671875,
  49.12109375, 49.13330078125, 49.1455078125, 49.15771484375, 49.169921875,
  49.18212890625, 49.1943359375, 49.20654296875, 49.21875, 49.23095703125,
  49.2431640625, 49.25537109375, 49.267578125, 49.27978515625, 49.2919921875,
  49.30419921875, 49.31640625, 49.32861328125, 49.3408203125, 49.35302734375,
  49.365234375, 49.37744140625, 49.3896484375, 49.40185546875, 49.4140625,
  49.42626953125, 49.4384765625, 49.45068359375, 49.462890625, 49.47509765625,
  49.4873046875, 49.49951171875, 49.51171875, 49.52392578125, 49.5361328125,
  49.54833984375, 49.560546875, 49.57275390625, 49.5849609375, 49.59716796875,
  49.609375, 49.62158203125, 49.6337890625, 49.64599609375, 49.658203125,
  49.67041015625, 49.6826171875, 49.69482421875, 49.70703125, 49.71923828125,
  49.7314453125, 49.74365234375, 49.755859375, 49.76806640625, 49.7802734375,
  49.79248046875, 49.8046875, 49.81689453125, 49.8291015625, 49.84130859375,
  49.853515625, 49.86572265625, 49.8779296875, 49.89013671875, 49.90234375,
  49.91455078125, 49.9267578125, 49.93896484375, 49.951171875, 49.96337890625,
  49.9755859375, 49.98779296875, 50.0, 50.01220703125, 50.0244140625,
  50.03662109375, 50.048828125, 50.06103515625, 50.0732421875, 50.08544921875,
  50.09765625, 50.10986328125, 50.1220703125, 50.13427734375, 50.146484375,
  50.15869140625, 50.1708984375, 50.18310546875, 50.1953125, 50.20751953125,
  50.2197265625, 50.23193359375, 50.244140625, 50.25634765625, 50.2685546875,
  50.28076171875, 50.29296875, 50.30517578125, 50.3173828125, 50.32958984375,
  50.341796875, 50.35400390625, 50.3662109375, 50.37841796875, 50.390625,
  50.40283203125, 50.4150390625, 50.42724609375, 50.439453125, 50.45166015625,
  50.4638671875, 50.47607421875, 50.48828125, 50.50048828125, 50.5126953125,
  50.52490234375, 50.537109375, 50.54931640625, 50.5615234375, 50.57373046875,
  50.5859375, 50.59814453125, 50.6103515625, 50.62255859375, 50.634765625,
  50.64697265625, 50.6591796875, 50.67138671875, 50.68359375, 50.69580078125,
  50.7080078125, 50.72021484375, 50.732421875, 50.74462890625, 50.7568359375,
  50.76904296875, 50.78125, 50.79345703125, 50.8056640625, 50.81787109375,
  50.830078125, 50.84228515625, 50.8544921875, 50.86669921875, 50.87890625,
  50.89111328125, 50.9033203125, 50.91552734375, 50.927734375, 50.93994140625,
  50.9521484375, 50.96435546875, 50.9765625, 50.98876953125, 51.0009765625,
  51.01318359375, 51.025390625, 51.03759765625, 51.0498046875, 51.06201171875,
  51.07421875, 51.08642578125, 51.0986328125, 51.11083984375, 51.123046875,
  51.13525390625, 51.1474609375, 51.15966796875, 51.171875, 51.18408203125,
  51.1962890625, 51.20849609375, 51.220703125, 51.23291015625, 51.2451171875,
  51.25732421875, 51.26953125, 51.28173828125, 51.2939453125, 51.30615234375,
  51.318359375, 51.33056640625, 51.3427734375, 51.35498046875, 51.3671875,
  51.37939453125, 51.3916015625, 51.40380859375, 51.416015625, 51.42822265625,
  51.4404296875, 51.45263671875, 51.46484375, 51.47705078125, 51.4892578125,
  51.50146484375, 51.513671875, 51.52587890625, 51.5380859375, 51.55029296875,
  51.5625, 51.57470703125, 51.5869140625, 51.59912109375, 51.611328125,
  51.62353515625, 51.6357421875, 51.64794921875, 51.66015625, 51.67236328125,
  51.6845703125, 51.69677734375, 51.708984375, 51.72119140625, 51.7333984375,
  51.74560546875, 51.7578125, 51.77001953125, 51.7822265625, 51.79443359375,
  51.806640625, 51.81884765625, 51.8310546875, 51.84326171875, 51.85546875,
  51.86767578125, 51.8798828125, 51.89208984375, 51.904296875, 51.91650390625,
  51.9287109375, 51.94091796875, 51.953125, 51.96533203125, 51.9775390625,
  51.98974609375, 52.001953125, 52.01416015625, 52.0263671875, 52.03857421875,
  52.05078125, 52.06298828125, 52.0751953125, 52.08740234375, 52.099609375,
  52.11181640625, 52.1240234375, 52.13623046875, 52.1484375, 52.16064453125,
  52.1728515625, 52.18505859375, 52.197265625, 52.20947265625, 52.2216796875,
  52.23388671875, 52.24609375, 52.25830078125, 52.2705078125, 52.28271484375,
  52.294921875, 52.30712890625, 52.3193359375, 52.33154296875, 52.34375,
  52.35595703125, 52.3681640625, 52.38037109375, 52.392578125, 52.40478515625,
  52.4169921875, 52.42919921875, 52.44140625, 52.45361328125, 52.4658203125,
  52.47802734375, 52.490234375, 52.50244140625, 52.5146484375, 52.52685546875,
  52.5390625, 52.55126953125, 52.5634765625, 52.57568359375, 52.587890625,
  52.60009765625, 52.6123046875, 52.62451171875, 52.63671875, 52.64892578125,
  52.6611328125, 52.67333984375, 52.685546875, 52.69775390625, 52.7099609375,
  52.72216796875, 52.734375, 52.74658203125, 52.7587890625, 52.77099609375,
  52.783203125, 52.79541015625, 52.8076171875, 52.81982421875, 52.83203125,
  52.84423828125, 52.8564453125, 52.86865234375, 52.880859375, 52.89306640625,
  52.9052734375, 52.91748046875, 52.9296875, 52.94189453125, 52.9541015625,
  52.96630859375, 52.978515625, 52.99072265625, 53.0029296875, 53.01513671875,
  53.02734375, 53.03955078125, 53.0517578125, 53.06396484375, 53.076171875,
  53.08837890625, 53.1005859375, 53.11279296875, 53.125, 53.13720703125,
  53.1494140625, 53.16162109375, 53.173828125, 53.18603515625, 53.1982421875,
  53.21044921875, 53.22265625, 53.23486328125, 53.2470703125, 53.25927734375,
  53.271484375, 53.28369140625, 53.2958984375, 53.30810546875, 53.3203125,
  53.33251953125, 53.3447265625, 53.35693359375, 53.369140625, 53.38134765625,
  53.3935546875, 53.40576171875, 53.41796875, 53.43017578125, 53.4423828125,
  53.45458984375, 53.466796875, 53.47900390625, 53.4912109375, 53.50341796875,
  53.515625, 53.52783203125, 53.5400390625, 53.55224609375, 53.564453125,
  53.57666015625, 53.5888671875, 53.60107421875, 53.61328125, 53.62548828125,
  53.6376953125, 53.64990234375, 53.662109375, 53.67431640625, 53.6865234375,
  53.69873046875, 53.7109375, 53.72314453125, 53.7353515625, 53.74755859375,
  53.759765625, 53.77197265625, 53.7841796875, 53.79638671875, 53.80859375,
  53.82080078125, 53.8330078125, 53.84521484375, 53.857421875, 53.86962890625,
  53.8818359375, 53.89404296875, 53.90625, 53.91845703125, 53.9306640625,
  53.94287109375, 53.955078125, 53.96728515625, 53.9794921875, 53.99169921875,
  54.00390625, 54.01611328125, 54.0283203125, 54.04052734375, 54.052734375,
  54.06494140625, 54.0771484375, 54.08935546875, 54.1015625, 54.11376953125,
  54.1259765625, 54.13818359375, 54.150390625, 54.16259765625, 54.1748046875,
  54.18701171875, 54.19921875, 54.21142578125, 54.2236328125, 54.23583984375,
  54.248046875, 54.26025390625, 54.2724609375, 54.28466796875, 54.296875,
  54.30908203125, 54.3212890625, 54.33349609375, 54.345703125, 54.35791015625,
  54.3701171875, 54.38232421875, 54.39453125, 54.40673828125, 54.4189453125,
  54.43115234375, 54.443359375, 54.45556640625, 54.4677734375, 54.47998046875,
  54.4921875, 54.50439453125, 54.5166015625, 54.52880859375, 54.541015625,
  54.55322265625, 54.5654296875, 54.57763671875, 54.58984375, 54.60205078125,
  54.6142578125, 54.62646484375, 54.638671875, 54.65087890625, 54.6630859375,
  54.67529296875, 54.6875, 54.69970703125, 54.7119140625, 54.72412109375,
  54.736328125, 54.74853515625, 54.7607421875, 54.77294921875, 54.78515625,
  54.79736328125, 54.8095703125, 54.82177734375, 54.833984375, 54.84619140625,
  54.8583984375, 54.87060546875, 54.8828125, 54.89501953125, 54.9072265625,
  54.91943359375, 54.931640625, 54.94384765625, 54.9560546875, 54.96826171875,
  54.98046875, 54.99267578125, 55.0048828125, 55.01708984375, 55.029296875,
  55.04150390625, 55.0537109375, 55.06591796875, 55.078125, 55.09033203125,
  55.1025390625, 55.11474609375, 55.126953125, 55.13916015625, 55.1513671875,
  55.16357421875, 55.17578125, 55.18798828125, 55.2001953125, 55.21240234375,
  55.224609375, 55.23681640625, 55.2490234375, 55.26123046875, 55.2734375,
  55.28564453125, 55.2978515625, 55.31005859375, 55.322265625, 55.33447265625,
  55.3466796875, 55.35888671875, 55.37109375, 55.38330078125, 55.3955078125,
  55.40771484375, 55.419921875, 55.43212890625, 55.4443359375, 55.45654296875,
  55.46875, 55.48095703125, 55.4931640625, 55.50537109375, 55.517578125,
  55.52978515625, 55.5419921875, 55.55419921875, 55.56640625, 55.57861328125,
  55.5908203125, 55.60302734375, 55.615234375, 55.62744140625, 55.6396484375,
  55.65185546875, 55.6640625, 55.67626953125, 55.6884765625, 55.70068359375,
  55.712890625, 55.72509765625, 55.7373046875, 55.74951171875, 55.76171875,
  55.77392578125, 55.7861328125, 55.79833984375, 55.810546875, 55.82275390625,
  55.8349609375, 55.84716796875, 55.859375, 55.87158203125, 55.8837890625,
  55.89599609375, 55.908203125, 55.92041015625, 55.9326171875, 55.94482421875,
  55.95703125, 55.96923828125, 55.9814453125, 55.99365234375, 56.005859375,
  56.01806640625, 56.0302734375, 56.04248046875, 56.0546875, 56.06689453125,
  56.0791015625, 56.09130859375, 56.103515625, 56.11572265625, 56.1279296875,
  56.14013671875, 56.15234375, 56.16455078125, 56.1767578125, 56.18896484375,
  56.201171875, 56.21337890625, 56.2255859375, 56.23779296875, 56.25,
  56.26220703125, 56.2744140625, 56.28662109375, 56.298828125, 56.31103515625,
  56.3232421875, 56.33544921875, 56.34765625, 56.35986328125, 56.3720703125,
  56.38427734375, 56.396484375, 56.40869140625, 56.4208984375, 56.43310546875,
  56.4453125, 56.45751953125, 56.4697265625, 56.48193359375, 56.494140625,
  56.50634765625, 56.5185546875, 56.53076171875, 56.54296875, 56.55517578125,
  56.5673828125, 56.57958984375, 56.591796875, 56.60400390625, 56.6162109375,
  56.62841796875, 56.640625, 56.65283203125, 56.6650390625, 56.67724609375,
  56.689453125, 56.70166015625, 56.7138671875, 56.72607421875, 56.73828125,
  56.75048828125, 56.7626953125, 56.77490234375, 56.787109375, 56.79931640625,
  56.8115234375, 56.82373046875, 56.8359375, 56.84814453125, 56.8603515625,
  56.87255859375, 56.884765625, 56.89697265625, 56.9091796875, 56.92138671875,
  56.93359375, 56.94580078125, 56.9580078125, 56.97021484375, 56.982421875,
  56.99462890625, 57.0068359375, 57.01904296875, 57.03125, 57.04345703125,
  57.0556640625, 57.06787109375, 57.080078125, 57.09228515625, 57.1044921875,
  57.11669921875, 57.12890625, 57.14111328125, 57.1533203125, 57.16552734375,
  57.177734375, 57.18994140625, 57.2021484375, 57.21435546875, 57.2265625,
  57.23876953125, 57.2509765625, 57.26318359375, 57.275390625, 57.28759765625,
  57.2998046875, 57.31201171875, 57.32421875, 57.33642578125, 57.3486328125,
  57.36083984375, 57.373046875, 57.38525390625, 57.3974609375, 57.40966796875,
  57.421875, 57.43408203125, 57.4462890625, 57.45849609375, 57.470703125,
  57.48291015625, 57.4951171875, 57.50732421875, 57.51953125, 57.53173828125,
  57.5439453125, 57.55615234375, 57.568359375, 57.58056640625, 57.5927734375,
  57.60498046875, 57.6171875, 57.62939453125, 57.6416015625, 57.65380859375,
  57.666015625, 57.67822265625, 57.6904296875, 57.70263671875, 57.71484375,
  57.72705078125, 57.7392578125, 57.75146484375, 57.763671875, 57.77587890625,
  57.7880859375, 57.80029296875, 57.8125, 57.82470703125, 57.8369140625,
  57.84912109375, 57.861328125, 57.87353515625, 57.8857421875, 57.89794921875,
  57.91015625, 57.92236328125, 57.9345703125, 57.94677734375, 57.958984375,
  57.97119140625, 57.9833984375, 57.99560546875, 58.0078125, 58.02001953125,
  58.0322265625, 58.04443359375, 58.056640625, 58.06884765625, 58.0810546875,
  58.09326171875, 58.10546875, 58.11767578125, 58.1298828125, 58.14208984375,
  58.154296875, 58.16650390625, 58.1787109375, 58.19091796875, 58.203125,
  58.21533203125, 58.2275390625, 58.23974609375, 58.251953125, 58.26416015625,
  58.2763671875, 58.28857421875, 58.30078125, 58.31298828125, 58.3251953125,
  58.33740234375, 58.349609375, 58.36181640625, 58.3740234375, 58.38623046875,
  58.3984375, 58.41064453125, 58.4228515625, 58.43505859375, 58.447265625,
  58.45947265625, 58.4716796875, 58.48388671875, 58.49609375, 58.50830078125,
  58.5205078125, 58.53271484375, 58.544921875, 58.55712890625, 58.5693359375,
  58.58154296875, 58.59375, 58.60595703125, 58.6181640625, 58.63037109375,
  58.642578125, 58.65478515625, 58.6669921875, 58.67919921875, 58.69140625,
  58.70361328125, 58.7158203125, 58.72802734375, 58.740234375, 58.75244140625,
  58.7646484375, 58.77685546875, 58.7890625, 58.80126953125, 58.8134765625,
  58.82568359375, 58.837890625, 58.85009765625, 58.8623046875, 58.87451171875,
  58.88671875, 58.89892578125, 58.9111328125, 58.92333984375, 58.935546875,
  58.94775390625, 58.9599609375, 58.97216796875, 58.984375, 58.99658203125,
  59.0087890625, 59.02099609375, 59.033203125, 59.04541015625, 59.0576171875,
  59.06982421875, 59.08203125, 59.09423828125, 59.1064453125, 59.11865234375,
  59.130859375, 59.14306640625, 59.1552734375, 59.16748046875, 59.1796875,
  59.19189453125, 59.2041015625, 59.21630859375, 59.228515625, 59.24072265625,
  59.2529296875, 59.26513671875, 59.27734375, 59.28955078125, 59.3017578125,
  59.31396484375, 59.326171875, 59.33837890625, 59.3505859375, 59.36279296875,
  59.375, 59.38720703125, 59.3994140625, 59.41162109375, 59.423828125,
  59.43603515625, 59.4482421875, 59.46044921875, 59.47265625, 59.48486328125,
  59.4970703125, 59.50927734375, 59.521484375, 59.53369140625, 59.5458984375,
  59.55810546875, 59.5703125, 59.58251953125, 59.5947265625, 59.60693359375,
  59.619140625, 59.63134765625, 59.6435546875, 59.65576171875, 59.66796875,
  59.68017578125, 59.6923828125, 59.70458984375, 59.716796875, 59.72900390625,
  59.7412109375, 59.75341796875, 59.765625, 59.77783203125, 59.7900390625,
  59.80224609375, 59.814453125, 59.82666015625, 59.8388671875, 59.85107421875,
  59.86328125, 59.87548828125, 59.8876953125, 59.89990234375, 59.912109375,
  59.92431640625, 59.9365234375, 59.94873046875, 59.9609375, 59.97314453125,
  59.9853515625, 59.99755859375, 60.009765625, 60.02197265625, 60.0341796875,
  60.04638671875, 60.05859375, 60.07080078125, 60.0830078125, 60.09521484375,
  60.107421875, 60.11962890625, 60.1318359375, 60.14404296875, 60.15625,
  60.16845703125, 60.1806640625, 60.19287109375, 60.205078125, 60.21728515625,
  60.2294921875, 60.24169921875, 60.25390625, 60.26611328125, 60.2783203125,
  60.29052734375, 60.302734375, 60.31494140625, 60.3271484375, 60.33935546875,
  60.3515625, 60.36376953125, 60.3759765625, 60.38818359375, 60.400390625,
  60.41259765625, 60.4248046875, 60.43701171875, 60.44921875, 60.46142578125,
  60.4736328125, 60.48583984375, 60.498046875, 60.51025390625, 60.5224609375,
  60.53466796875, 60.546875, 60.55908203125, 60.5712890625, 60.58349609375,
  60.595703125, 60.60791015625, 60.6201171875, 60.63232421875, 60.64453125,
  60.65673828125, 60.6689453125, 60.68115234375, 60.693359375, 60.70556640625,
  60.7177734375, 60.72998046875, 60.7421875, 60.75439453125, 60.7666015625,
  60.77880859375, 60.791015625, 60.80322265625, 60.8154296875, 60.82763671875,
  60.83984375, 60.85205078125, 60.8642578125, 60.87646484375, 60.888671875,
  60.90087890625, 60.9130859375, 60.92529296875, 60.9375, 60.94970703125,
  60.9619140625, 60.97412109375, 60.986328125, 60.99853515625, 61.0107421875,
  61.02294921875, 61.03515625, 61.04736328125, 61.0595703125, 61.07177734375,
  61.083984375, 61.09619140625, 61.1083984375, 61.12060546875, 61.1328125,
  61.14501953125, 61.1572265625, 61.16943359375, 61.181640625, 61.19384765625,
  61.2060546875, 61.21826171875, 61.23046875, 61.24267578125, 61.2548828125,
  61.26708984375, 61.279296875, 61.29150390625, 61.3037109375, 61.31591796875,
  61.328125, 61.34033203125, 61.3525390625, 61.36474609375, 61.376953125,
  61.38916015625, 61.4013671875, 61.41357421875, 61.42578125, 61.43798828125,
  61.4501953125, 61.46240234375, 61.474609375, 61.48681640625, 61.4990234375,
  61.51123046875, 61.5234375, 61.53564453125, 61.5478515625, 61.56005859375,
  61.572265625, 61.58447265625, 61.5966796875, 61.60888671875, 61.62109375,
  61.63330078125, 61.6455078125, 61.65771484375, 61.669921875, 61.68212890625,
  61.6943359375, 61.70654296875, 61.71875, 61.73095703125, 61.7431640625,
  61.75537109375, 61.767578125, 61.77978515625, 61.7919921875, 61.80419921875,
  61.81640625, 61.82861328125, 61.8408203125, 61.85302734375, 61.865234375,
  61.87744140625, 61.8896484375, 61.90185546875, 61.9140625, 61.92626953125,
  61.9384765625, 61.95068359375, 61.962890625, 61.97509765625, 61.9873046875,
  61.99951171875, 62.01171875, 62.02392578125, 62.0361328125, 62.04833984375,
  62.060546875, 62.07275390625, 62.0849609375, 62.09716796875, 62.109375,
  62.12158203125, 62.1337890625, 62.14599609375, 62.158203125, 62.17041015625,
  62.1826171875, 62.19482421875, 62.20703125, 62.21923828125, 62.2314453125,
  62.24365234375, 62.255859375, 62.26806640625, 62.2802734375, 62.29248046875,
  62.3046875, 62.31689453125, 62.3291015625, 62.34130859375, 62.353515625,
  62.36572265625, 62.3779296875, 62.39013671875, 62.40234375, 62.41455078125,
  62.4267578125, 62.43896484375, 62.451171875, 62.46337890625, 62.4755859375,
  62.48779296875, 62.5, 62.51220703125, 62.5244140625, 62.53662109375,
  62.548828125, 62.56103515625, 62.5732421875, 62.58544921875, 62.59765625,
  62.60986328125, 62.6220703125, 62.63427734375, 62.646484375, 62.65869140625,
  62.6708984375, 62.68310546875, 62.6953125, 62.70751953125, 62.7197265625,
  62.73193359375, 62.744140625, 62.75634765625, 62.7685546875, 62.78076171875,
  62.79296875, 62.80517578125, 62.8173828125, 62.82958984375, 62.841796875,
  62.85400390625, 62.8662109375, 62.87841796875, 62.890625, 62.90283203125,
  62.9150390625, 62.92724609375, 62.939453125, 62.95166015625, 62.9638671875,
  62.97607421875, 62.98828125, 63.00048828125, 63.0126953125, 63.02490234375,
  63.037109375, 63.04931640625, 63.0615234375, 63.07373046875, 63.0859375,
  63.09814453125, 63.1103515625, 63.12255859375, 63.134765625, 63.14697265625,
  63.1591796875, 63.17138671875, 63.18359375, 63.19580078125, 63.2080078125,
  63.22021484375, 63.232421875, 63.24462890625, 63.2568359375, 63.26904296875,
  63.28125, 63.29345703125, 63.3056640625, 63.31787109375, 63.330078125,
  63.34228515625, 63.3544921875, 63.36669921875, 63.37890625, 63.39111328125,
  63.4033203125, 63.41552734375, 63.427734375, 63.43994140625, 63.4521484375,
  63.46435546875, 63.4765625, 63.48876953125, 63.5009765625, 63.51318359375,
  63.525390625, 63.53759765625, 63.5498046875, 63.56201171875, 63.57421875,
  63.58642578125, 63.5986328125, 63.61083984375, 63.623046875, 63.63525390625,
  63.6474609375, 63.65966796875, 63.671875, 63.68408203125, 63.6962890625,
  63.70849609375, 63.720703125, 63.73291015625, 63.7451171875, 63.75732421875,
  63.76953125, 63.78173828125, 63.7939453125, 63.80615234375, 63.818359375,
  63.83056640625, 63.8427734375, 63.85498046875, 63.8671875, 63.87939453125,
  63.8916015625, 63.90380859375, 63.916015625, 63.92822265625, 63.9404296875,
  63.95263671875, 63.96484375, 63.97705078125, 63.9892578125, 64.00146484375,
  64.013671875, 64.02587890625, 64.0380859375, 64.05029296875, 64.0625,
  64.07470703125, 64.0869140625, 64.09912109375, 64.111328125, 64.12353515625,
  64.1357421875, 64.14794921875, 64.16015625, 64.17236328125, 64.1845703125,
  64.19677734375, 64.208984375, 64.22119140625, 64.2333984375, 64.24560546875,
  64.2578125, 64.27001953125, 64.2822265625, 64.29443359375, 64.306640625,
  64.31884765625, 64.3310546875, 64.34326171875, 64.35546875, 64.36767578125,
  64.3798828125, 64.39208984375, 64.404296875, 64.41650390625, 64.4287109375,
  64.44091796875, 64.453125, 64.46533203125, 64.4775390625, 64.48974609375,
  64.501953125, 64.51416015625, 64.5263671875, 64.53857421875, 64.55078125,
  64.56298828125, 64.5751953125, 64.58740234375, 64.599609375, 64.61181640625,
  64.6240234375, 64.63623046875, 64.6484375, 64.66064453125, 64.6728515625,
  64.68505859375, 64.697265625, 64.70947265625, 64.7216796875, 64.73388671875,
  64.74609375, 64.75830078125, 64.7705078125, 64.78271484375, 64.794921875,
  64.80712890625, 64.8193359375, 64.83154296875, 64.84375, 64.85595703125,
  64.8681640625, 64.88037109375, 64.892578125, 64.90478515625, 64.9169921875,
  64.92919921875, 64.94140625, 64.95361328125, 64.9658203125, 64.97802734375,
  64.990234375, 65.00244140625, 65.0146484375, 65.02685546875, 65.0390625,
  65.05126953125, 65.0634765625, 65.07568359375, 65.087890625, 65.10009765625,
  65.1123046875, 65.12451171875, 65.13671875, 65.14892578125, 65.1611328125,
  65.17333984375, 65.185546875, 65.19775390625, 65.2099609375, 65.22216796875,
  65.234375, 65.24658203125, 65.2587890625, 65.27099609375, 65.283203125,
  65.29541015625, 65.3076171875, 65.31982421875, 65.33203125, 65.34423828125,
  65.3564453125, 65.36865234375, 65.380859375, 65.39306640625, 65.4052734375,
  65.41748046875, 65.4296875, 65.44189453125, 65.4541015625, 65.46630859375,
  65.478515625, 65.49072265625, 65.5029296875, 65.51513671875, 65.52734375,
  65.53955078125, 65.5517578125, 65.56396484375, 65.576171875, 65.58837890625,
  65.6005859375, 65.61279296875, 65.625, 65.63720703125, 65.6494140625,
  65.66162109375, 65.673828125, 65.68603515625, 65.6982421875, 65.71044921875,
  65.72265625, 65.73486328125, 65.7470703125, 65.75927734375, 65.771484375,
  65.78369140625, 65.7958984375, 65.80810546875, 65.8203125, 65.83251953125,
  65.8447265625, 65.85693359375, 65.869140625, 65.88134765625, 65.8935546875,
  65.90576171875, 65.91796875, 65.93017578125, 65.9423828125, 65.95458984375,
  65.966796875, 65.97900390625, 65.9912109375, 66.00341796875, 66.015625,
  66.02783203125, 66.0400390625, 66.05224609375, 66.064453125, 66.07666015625,
  66.0888671875, 66.10107421875, 66.11328125, 66.12548828125, 66.1376953125,
  66.14990234375, 66.162109375, 66.17431640625, 66.1865234375, 66.19873046875,
  66.2109375, 66.22314453125, 66.2353515625, 66.24755859375, 66.259765625,
  66.27197265625, 66.2841796875, 66.29638671875, 66.30859375, 66.32080078125,
  66.3330078125, 66.34521484375, 66.357421875, 66.36962890625, 66.3818359375,
  66.39404296875, 66.40625, 66.41845703125, 66.4306640625, 66.44287109375,
  66.455078125, 66.46728515625, 66.4794921875, 66.49169921875, 66.50390625,
  66.51611328125, 66.5283203125, 66.54052734375, 66.552734375, 66.56494140625,
  66.5771484375, 66.58935546875, 66.6015625, 66.61376953125, 66.6259765625,
  66.63818359375, 66.650390625, 66.66259765625, 66.6748046875, 66.68701171875,
  66.69921875, 66.71142578125, 66.7236328125, 66.73583984375, 66.748046875,
  66.76025390625, 66.7724609375, 66.78466796875, 66.796875, 66.80908203125,
  66.8212890625, 66.83349609375, 66.845703125, 66.85791015625, 66.8701171875,
  66.88232421875, 66.89453125, 66.90673828125, 66.9189453125, 66.93115234375,
  66.943359375, 66.95556640625, 66.9677734375, 66.97998046875, 66.9921875,
  67.00439453125, 67.0166015625, 67.02880859375, 67.041015625, 67.05322265625,
  67.0654296875, 67.07763671875, 67.08984375, 67.10205078125, 67.1142578125,
  67.12646484375, 67.138671875, 67.15087890625, 67.1630859375, 67.17529296875,
  67.1875, 67.19970703125, 67.2119140625, 67.22412109375, 67.236328125,
  67.24853515625, 67.2607421875, 67.27294921875, 67.28515625, 67.29736328125,
  67.3095703125, 67.32177734375, 67.333984375, 67.34619140625, 67.3583984375,
  67.37060546875, 67.3828125, 67.39501953125, 67.4072265625, 67.41943359375,
  67.431640625, 67.44384765625, 67.4560546875, 67.46826171875, 67.48046875,
  67.49267578125, 67.5048828125, 67.51708984375, 67.529296875, 67.54150390625,
  67.5537109375, 67.56591796875, 67.578125, 67.59033203125, 67.6025390625,
  67.61474609375, 67.626953125, 67.63916015625, 67.6513671875, 67.66357421875,
  67.67578125, 67.68798828125, 67.7001953125, 67.71240234375, 67.724609375,
  67.73681640625, 67.7490234375, 67.76123046875, 67.7734375, 67.78564453125,
  67.7978515625, 67.81005859375, 67.822265625, 67.83447265625, 67.8466796875,
  67.85888671875, 67.87109375, 67.88330078125, 67.8955078125, 67.90771484375,
  67.919921875, 67.93212890625, 67.9443359375, 67.95654296875, 67.96875,
  67.98095703125, 67.9931640625, 68.00537109375, 68.017578125, 68.02978515625,
  68.0419921875, 68.05419921875, 68.06640625, 68.07861328125, 68.0908203125,
  68.10302734375, 68.115234375, 68.12744140625, 68.1396484375, 68.15185546875,
  68.1640625, 68.17626953125, 68.1884765625, 68.20068359375, 68.212890625,
  68.22509765625, 68.2373046875, 68.24951171875, 68.26171875, 68.27392578125,
  68.2861328125, 68.29833984375, 68.310546875, 68.32275390625, 68.3349609375,
  68.34716796875, 68.359375, 68.37158203125, 68.3837890625, 68.39599609375,
  68.408203125, 68.42041015625, 68.4326171875, 68.44482421875, 68.45703125,
  68.46923828125, 68.4814453125, 68.49365234375, 68.505859375, 68.51806640625,
  68.5302734375, 68.54248046875, 68.5546875, 68.56689453125, 68.5791015625,
  68.59130859375, 68.603515625, 68.61572265625, 68.6279296875, 68.64013671875,
  68.65234375, 68.66455078125, 68.6767578125, 68.68896484375, 68.701171875,
  68.71337890625, 68.7255859375, 68.73779296875, 68.75, 68.76220703125,
  68.7744140625, 68.78662109375, 68.798828125, 68.81103515625, 68.8232421875,
  68.83544921875, 68.84765625, 68.85986328125, 68.8720703125, 68.88427734375,
  68.896484375, 68.90869140625, 68.9208984375, 68.93310546875, 68.9453125,
  68.95751953125, 68.9697265625, 68.98193359375, 68.994140625, 69.00634765625,
  69.0185546875, 69.03076171875, 69.04296875, 69.05517578125, 69.0673828125,
  69.07958984375, 69.091796875, 69.10400390625, 69.1162109375, 69.12841796875,
  69.140625, 69.15283203125, 69.1650390625, 69.17724609375, 69.189453125,
  69.20166015625, 69.2138671875, 69.22607421875, 69.23828125, 69.25048828125,
  69.2626953125, 69.27490234375, 69.287109375, 69.29931640625, 69.3115234375,
  69.32373046875, 69.3359375, 69.34814453125, 69.3603515625, 69.37255859375,
  69.384765625, 69.39697265625, 69.4091796875, 69.42138671875, 69.43359375,
  69.44580078125, 69.4580078125, 69.47021484375, 69.482421875, 69.49462890625,
  69.5068359375, 69.51904296875, 69.53125, 69.54345703125, 69.5556640625,
  69.56787109375, 69.580078125, 69.59228515625, 69.6044921875, 69.61669921875,
  69.62890625, 69.64111328125, 69.6533203125, 69.66552734375, 69.677734375,
  69.68994140625, 69.7021484375, 69.71435546875, 69.7265625, 69.73876953125,
  69.7509765625, 69.76318359375, 69.775390625, 69.78759765625, 69.7998046875,
  69.81201171875, 69.82421875, 69.83642578125, 69.8486328125, 69.86083984375,
  69.873046875, 69.88525390625, 69.8974609375, 69.90966796875, 69.921875,
  69.93408203125, 69.9462890625, 69.95849609375, 69.970703125, 69.98291015625,
  69.9951171875, 70.00732421875, 70.01953125, 70.03173828125, 70.0439453125,
  70.05615234375, 70.068359375, 70.08056640625, 70.0927734375, 70.10498046875,
  70.1171875, 70.12939453125, 70.1416015625, 70.15380859375, 70.166015625,
  70.17822265625, 70.1904296875, 70.20263671875, 70.21484375, 70.22705078125,
  70.2392578125, 70.25146484375, 70.263671875, 70.27587890625, 70.2880859375,
  70.30029296875, 70.3125, 70.32470703125, 70.3369140625, 70.34912109375,
  70.361328125, 70.37353515625, 70.3857421875, 70.39794921875, 70.41015625,
  70.42236328125, 70.4345703125, 70.44677734375, 70.458984375, 70.47119140625,
  70.4833984375, 70.49560546875, 70.5078125, 70.52001953125, 70.5322265625,
  70.54443359375, 70.556640625, 70.56884765625, 70.5810546875, 70.59326171875,
  70.60546875, 70.61767578125, 70.6298828125, 70.64208984375, 70.654296875,
  70.66650390625, 70.6787109375, 70.69091796875, 70.703125, 70.71533203125,
  70.7275390625, 70.73974609375, 70.751953125, 70.76416015625, 70.7763671875,
  70.78857421875, 70.80078125, 70.81298828125, 70.8251953125, 70.83740234375,
  70.849609375, 70.86181640625, 70.8740234375, 70.88623046875, 70.8984375,
  70.91064453125, 70.9228515625, 70.93505859375, 70.947265625, 70.95947265625,
  70.9716796875, 70.98388671875, 70.99609375, 71.00830078125, 71.0205078125,
  71.03271484375, 71.044921875, 71.05712890625, 71.0693359375, 71.08154296875,
  71.09375, 71.10595703125, 71.1181640625, 71.13037109375, 71.142578125,
  71.15478515625, 71.1669921875, 71.17919921875, 71.19140625, 71.20361328125,
  71.2158203125, 71.22802734375, 71.240234375, 71.25244140625, 71.2646484375,
  71.27685546875, 71.2890625, 71.30126953125, 71.3134765625, 71.32568359375,
  71.337890625, 71.35009765625, 71.3623046875, 71.37451171875, 71.38671875,
  71.39892578125, 71.4111328125, 71.42333984375, 71.435546875, 71.44775390625,
  71.4599609375, 71.47216796875, 71.484375, 71.49658203125, 71.5087890625,
  71.52099609375, 71.533203125, 71.54541015625, 71.5576171875, 71.56982421875,
  71.58203125, 71.59423828125, 71.6064453125, 71.61865234375, 71.630859375,
  71.64306640625, 71.6552734375, 71.66748046875, 71.6796875, 71.69189453125,
  71.7041015625, 71.71630859375, 71.728515625, 71.74072265625, 71.7529296875,
  71.76513671875, 71.77734375, 71.78955078125, 71.8017578125, 71.81396484375,
  71.826171875, 71.83837890625, 71.8505859375, 71.86279296875, 71.875,
  71.88720703125, 71.8994140625, 71.91162109375, 71.923828125, 71.93603515625,
  71.9482421875, 71.96044921875, 71.97265625, 71.98486328125, 71.9970703125,
  72.00927734375, 72.021484375, 72.03369140625, 72.0458984375, 72.05810546875,
  72.0703125, 72.08251953125, 72.0947265625, 72.10693359375, 72.119140625,
  72.13134765625, 72.1435546875, 72.15576171875, 72.16796875, 72.18017578125,
  72.1923828125, 72.20458984375, 72.216796875, 72.22900390625, 72.2412109375,
  72.25341796875, 72.265625, 72.27783203125, 72.2900390625, 72.30224609375,
  72.314453125, 72.32666015625, 72.3388671875, 72.35107421875, 72.36328125,
  72.37548828125, 72.3876953125, 72.39990234375, 72.412109375, 72.42431640625,
  72.4365234375, 72.44873046875, 72.4609375, 72.47314453125, 72.4853515625,
  72.49755859375, 72.509765625, 72.52197265625, 72.5341796875, 72.54638671875,
  72.55859375, 72.57080078125, 72.5830078125, 72.59521484375, 72.607421875,
  72.61962890625, 72.6318359375, 72.64404296875, 72.65625, 72.66845703125,
  72.6806640625, 72.69287109375, 72.705078125, 72.71728515625, 72.7294921875,
  72.74169921875, 72.75390625, 72.76611328125, 72.7783203125, 72.79052734375,
  72.802734375, 72.81494140625, 72.8271484375, 72.83935546875, 72.8515625,
  72.86376953125, 72.8759765625, 72.88818359375, 72.900390625, 72.91259765625,
  72.9248046875, 72.93701171875, 72.94921875, 72.96142578125, 72.9736328125,
  72.98583984375, 72.998046875, 73.01025390625, 73.0224609375, 73.03466796875,
  73.046875, 73.05908203125, 73.0712890625, 73.08349609375, 73.095703125,
  73.10791015625, 73.1201171875, 73.13232421875, 73.14453125, 73.15673828125,
  73.1689453125, 73.18115234375, 73.193359375, 73.20556640625, 73.2177734375,
  73.22998046875, 73.2421875, 73.25439453125, 73.2666015625, 73.27880859375,
  73.291015625, 73.30322265625, 73.3154296875, 73.32763671875, 73.33984375,
  73.35205078125, 73.3642578125, 73.37646484375, 73.388671875, 73.40087890625,
  73.4130859375, 73.42529296875, 73.4375, 73.44970703125, 73.4619140625,
  73.47412109375, 73.486328125, 73.49853515625, 73.5107421875, 73.52294921875,
  73.53515625, 73.54736328125, 73.5595703125, 73.57177734375, 73.583984375,
  73.59619140625, 73.6083984375, 73.62060546875, 73.6328125, 73.64501953125,
  73.6572265625, 73.66943359375, 73.681640625, 73.69384765625, 73.7060546875,
  73.71826171875, 73.73046875, 73.74267578125, 73.7548828125, 73.76708984375,
  73.779296875, 73.79150390625, 73.8037109375, 73.81591796875, 73.828125,
  73.84033203125, 73.8525390625, 73.86474609375, 73.876953125, 73.88916015625,
  73.9013671875, 73.91357421875, 73.92578125, 73.93798828125, 73.9501953125,
  73.96240234375, 73.974609375, 73.98681640625, 73.9990234375, 74.01123046875,
  74.0234375, 74.03564453125, 74.0478515625, 74.06005859375, 74.072265625,
  74.08447265625, 74.0966796875, 74.10888671875, 74.12109375, 74.13330078125,
  74.1455078125, 74.15771484375, 74.169921875, 74.18212890625, 74.1943359375,
  74.20654296875, 74.21875, 74.23095703125, 74.2431640625, 74.25537109375,
  74.267578125, 74.27978515625, 74.2919921875, 74.30419921875, 74.31640625,
  74.32861328125, 74.3408203125, 74.35302734375, 74.365234375, 74.37744140625,
  74.3896484375, 74.40185546875, 74.4140625, 74.42626953125, 74.4384765625,
  74.45068359375, 74.462890625, 74.47509765625, 74.4873046875, 74.49951171875,
  74.51171875, 74.52392578125, 74.5361328125, 74.54833984375, 74.560546875,
  74.57275390625, 74.5849609375, 74.59716796875, 74.609375, 74.62158203125,
  74.6337890625, 74.64599609375, 74.658203125, 74.67041015625, 74.6826171875,
  74.69482421875, 74.70703125, 74.71923828125, 74.7314453125, 74.74365234375,
  74.755859375, 74.76806640625, 74.7802734375, 74.79248046875, 74.8046875,
  74.81689453125, 74.8291015625, 74.84130859375, 74.853515625, 74.86572265625,
  74.8779296875, 74.89013671875, 74.90234375, 74.91455078125, 74.9267578125,
  74.93896484375, 74.951171875, 74.96337890625, 74.9755859375, 74.98779296875,
  75.0, 75.01220703125, 75.0244140625, 75.03662109375, 75.048828125,
  75.06103515625, 75.0732421875, 75.08544921875, 75.09765625, 75.10986328125,
  75.1220703125, 75.13427734375, 75.146484375, 75.15869140625, 75.1708984375,
  75.18310546875, 75.1953125, 75.20751953125, 75.2197265625, 75.23193359375,
  75.244140625, 75.25634765625, 75.2685546875, 75.28076171875, 75.29296875,
  75.30517578125, 75.3173828125, 75.32958984375, 75.341796875, 75.35400390625,
  75.3662109375, 75.37841796875, 75.390625, 75.40283203125, 75.4150390625,
  75.42724609375, 75.439453125, 75.45166015625, 75.4638671875, 75.47607421875,
  75.48828125, 75.50048828125, 75.5126953125, 75.52490234375, 75.537109375,
  75.54931640625, 75.5615234375, 75.57373046875, 75.5859375, 75.59814453125,
  75.6103515625, 75.62255859375, 75.634765625, 75.64697265625, 75.6591796875,
  75.67138671875, 75.68359375, 75.69580078125, 75.7080078125, 75.72021484375,
  75.732421875, 75.74462890625, 75.7568359375, 75.76904296875, 75.78125,
  75.79345703125, 75.8056640625, 75.81787109375, 75.830078125, 75.84228515625,
  75.8544921875, 75.86669921875, 75.87890625, 75.89111328125, 75.9033203125,
  75.91552734375, 75.927734375, 75.93994140625, 75.9521484375, 75.96435546875,
  75.9765625, 75.98876953125, 76.0009765625, 76.01318359375, 76.025390625,
  76.03759765625, 76.0498046875, 76.06201171875, 76.07421875, 76.08642578125,
  76.0986328125, 76.11083984375, 76.123046875, 76.13525390625, 76.1474609375,
  76.15966796875, 76.171875, 76.18408203125, 76.1962890625, 76.20849609375,
  76.220703125, 76.23291015625, 76.2451171875, 76.25732421875, 76.26953125,
  76.28173828125, 76.2939453125, 76.30615234375, 76.318359375, 76.33056640625,
  76.3427734375, 76.35498046875, 76.3671875, 76.37939453125, 76.3916015625,
  76.40380859375, 76.416015625, 76.42822265625, 76.4404296875, 76.45263671875,
  76.46484375, 76.47705078125, 76.4892578125, 76.50146484375, 76.513671875,
  76.52587890625, 76.5380859375, 76.55029296875, 76.5625, 76.57470703125,
  76.5869140625, 76.59912109375, 76.611328125, 76.62353515625, 76.6357421875,
  76.64794921875, 76.66015625, 76.67236328125, 76.6845703125, 76.69677734375,
  76.708984375, 76.72119140625, 76.7333984375, 76.74560546875, 76.7578125,
  76.77001953125, 76.7822265625, 76.79443359375, 76.806640625, 76.81884765625,
  76.8310546875, 76.84326171875, 76.85546875, 76.86767578125, 76.8798828125,
  76.89208984375, 76.904296875, 76.91650390625, 76.9287109375, 76.94091796875,
  76.953125, 76.96533203125, 76.9775390625, 76.98974609375, 77.001953125,
  77.01416015625, 77.0263671875, 77.03857421875, 77.05078125, 77.06298828125,
  77.0751953125, 77.08740234375, 77.099609375, 77.11181640625, 77.1240234375,
  77.13623046875, 77.1484375, 77.16064453125, 77.1728515625, 77.18505859375,
  77.197265625, 77.20947265625, 77.2216796875, 77.23388671875, 77.24609375,
  77.25830078125, 77.2705078125, 77.28271484375, 77.294921875, 77.30712890625,
  77.3193359375, 77.33154296875, 77.34375, 77.35595703125, 77.3681640625,
  77.38037109375, 77.392578125, 77.40478515625, 77.4169921875, 77.42919921875,
  77.44140625, 77.45361328125, 77.4658203125, 77.47802734375, 77.490234375,
  77.50244140625, 77.5146484375, 77.52685546875, 77.5390625, 77.55126953125,
  77.5634765625, 77.57568359375, 77.587890625, 77.60009765625, 77.6123046875,
  77.62451171875, 77.63671875, 77.64892578125, 77.6611328125, 77.67333984375,
  77.685546875, 77.69775390625, 77.7099609375, 77.72216796875, 77.734375,
  77.74658203125, 77.7587890625, 77.77099609375, 77.783203125, 77.79541015625,
  77.8076171875, 77.81982421875, 77.83203125, 77.84423828125, 77.8564453125,
  77.86865234375, 77.880859375, 77.89306640625, 77.9052734375, 77.91748046875,
  77.9296875, 77.94189453125, 77.9541015625, 77.96630859375, 77.978515625,
  77.99072265625, 78.0029296875, 78.01513671875, 78.02734375, 78.03955078125,
  78.0517578125, 78.06396484375, 78.076171875, 78.08837890625, 78.1005859375,
  78.11279296875, 78.125, 78.13720703125, 78.1494140625, 78.16162109375,
  78.173828125, 78.18603515625, 78.1982421875, 78.21044921875, 78.22265625,
  78.23486328125, 78.2470703125, 78.25927734375, 78.271484375, 78.28369140625,
  78.2958984375, 78.30810546875, 78.3203125, 78.33251953125, 78.3447265625,
  78.35693359375, 78.369140625, 78.38134765625, 78.3935546875, 78.40576171875,
  78.41796875, 78.43017578125, 78.4423828125, 78.45458984375, 78.466796875,
  78.47900390625, 78.4912109375, 78.50341796875, 78.515625, 78.52783203125,
  78.5400390625, 78.55224609375, 78.564453125, 78.57666015625, 78.5888671875,
  78.60107421875, 78.61328125, 78.62548828125, 78.6376953125, 78.64990234375,
  78.662109375, 78.67431640625, 78.6865234375, 78.69873046875, 78.7109375,
  78.72314453125, 78.7353515625, 78.74755859375, 78.759765625, 78.77197265625,
  78.7841796875, 78.79638671875, 78.80859375, 78.82080078125, 78.8330078125,
  78.84521484375, 78.857421875, 78.86962890625, 78.8818359375, 78.89404296875,
  78.90625, 78.91845703125, 78.9306640625, 78.94287109375, 78.955078125,
  78.96728515625, 78.9794921875, 78.99169921875, 79.00390625, 79.01611328125,
  79.0283203125, 79.04052734375, 79.052734375, 79.06494140625, 79.0771484375,
  79.08935546875, 79.1015625, 79.11376953125, 79.1259765625, 79.13818359375,
  79.150390625, 79.16259765625, 79.1748046875, 79.18701171875, 79.19921875,
  79.21142578125, 79.2236328125, 79.23583984375, 79.248046875, 79.26025390625,
  79.2724609375, 79.28466796875, 79.296875, 79.30908203125, 79.3212890625,
  79.33349609375, 79.345703125, 79.35791015625, 79.3701171875, 79.38232421875,
  79.39453125, 79.40673828125, 79.4189453125, 79.43115234375, 79.443359375,
  79.45556640625, 79.4677734375, 79.47998046875, 79.4921875, 79.50439453125,
  79.5166015625, 79.52880859375, 79.541015625, 79.55322265625, 79.5654296875,
  79.57763671875, 79.58984375, 79.60205078125, 79.6142578125, 79.62646484375,
  79.638671875, 79.65087890625, 79.6630859375, 79.67529296875, 79.6875,
  79.69970703125, 79.7119140625, 79.72412109375, 79.736328125, 79.74853515625,
  79.7607421875, 79.77294921875, 79.78515625, 79.79736328125, 79.8095703125,
  79.82177734375, 79.833984375, 79.84619140625, 79.8583984375, 79.87060546875,
  79.8828125, 79.89501953125, 79.9072265625, 79.91943359375, 79.931640625,
  79.94384765625, 79.9560546875, 79.96826171875, 79.98046875, 79.99267578125,
  80.0048828125, 80.01708984375, 80.029296875, 80.04150390625, 80.0537109375,
  80.06591796875, 80.078125, 80.09033203125, 80.1025390625, 80.11474609375,
  80.126953125, 80.13916015625, 80.1513671875, 80.16357421875, 80.17578125,
  80.18798828125, 80.2001953125, 80.21240234375, 80.224609375, 80.23681640625,
  80.2490234375, 80.26123046875, 80.2734375, 80.28564453125, 80.2978515625,
  80.31005859375, 80.322265625, 80.33447265625, 80.3466796875, 80.35888671875,
  80.37109375, 80.38330078125, 80.3955078125, 80.40771484375, 80.419921875,
  80.43212890625, 80.4443359375, 80.45654296875, 80.46875, 80.48095703125,
  80.4931640625, 80.50537109375, 80.517578125, 80.52978515625, 80.5419921875,
  80.55419921875, 80.56640625, 80.57861328125, 80.5908203125, 80.60302734375,
  80.615234375, 80.62744140625, 80.6396484375, 80.65185546875, 80.6640625,
  80.67626953125, 80.6884765625, 80.70068359375, 80.712890625, 80.72509765625,
  80.7373046875, 80.74951171875, 80.76171875, 80.77392578125, 80.7861328125,
  80.79833984375, 80.810546875, 80.82275390625, 80.8349609375, 80.84716796875,
  80.859375, 80.87158203125, 80.8837890625, 80.89599609375, 80.908203125,
  80.92041015625, 80.9326171875, 80.94482421875, 80.95703125, 80.96923828125,
  80.9814453125, 80.99365234375, 81.005859375, 81.01806640625, 81.0302734375,
  81.04248046875, 81.0546875, 81.06689453125, 81.0791015625, 81.09130859375,
  81.103515625, 81.11572265625, 81.1279296875, 81.14013671875, 81.15234375,
  81.16455078125, 81.1767578125, 81.18896484375, 81.201171875, 81.21337890625,
  81.2255859375, 81.23779296875, 81.25, 81.26220703125, 81.2744140625,
  81.28662109375, 81.298828125, 81.31103515625, 81.3232421875, 81.33544921875,
  81.34765625, 81.35986328125, 81.3720703125, 81.38427734375, 81.396484375,
  81.40869140625, 81.4208984375, 81.43310546875, 81.4453125, 81.45751953125,
  81.4697265625, 81.48193359375, 81.494140625, 81.50634765625, 81.5185546875,
  81.53076171875, 81.54296875, 81.55517578125, 81.5673828125, 81.57958984375,
  81.591796875, 81.60400390625, 81.6162109375, 81.62841796875, 81.640625,
  81.65283203125, 81.6650390625, 81.67724609375, 81.689453125, 81.70166015625,
  81.7138671875, 81.72607421875, 81.73828125, 81.75048828125, 81.7626953125,
  81.77490234375, 81.787109375, 81.79931640625, 81.8115234375, 81.82373046875,
  81.8359375, 81.84814453125, 81.8603515625, 81.87255859375, 81.884765625,
  81.89697265625, 81.9091796875, 81.92138671875, 81.93359375, 81.94580078125,
  81.9580078125, 81.97021484375, 81.982421875, 81.99462890625, 82.0068359375,
  82.01904296875, 82.03125, 82.04345703125, 82.0556640625, 82.06787109375,
  82.080078125, 82.09228515625, 82.1044921875, 82.11669921875, 82.12890625,
  82.14111328125, 82.1533203125, 82.16552734375, 82.177734375, 82.18994140625,
  82.2021484375, 82.21435546875, 82.2265625, 82.23876953125, 82.2509765625,
  82.26318359375, 82.275390625, 82.28759765625, 82.2998046875, 82.31201171875,
  82.32421875, 82.33642578125, 82.3486328125, 82.36083984375, 82.373046875,
  82.38525390625, 82.3974609375, 82.40966796875, 82.421875, 82.43408203125,
  82.4462890625, 82.45849609375, 82.470703125, 82.48291015625, 82.4951171875,
  82.50732421875, 82.51953125, 82.53173828125, 82.5439453125, 82.55615234375,
  82.568359375, 82.58056640625, 82.5927734375, 82.60498046875, 82.6171875,
  82.62939453125, 82.6416015625, 82.65380859375, 82.666015625, 82.67822265625,
  82.6904296875, 82.70263671875, 82.71484375, 82.72705078125, 82.7392578125,
  82.75146484375, 82.763671875, 82.77587890625, 82.7880859375, 82.80029296875,
  82.8125, 82.82470703125, 82.8369140625, 82.84912109375, 82.861328125,
  82.87353515625, 82.8857421875, 82.89794921875, 82.91015625, 82.92236328125,
  82.9345703125, 82.94677734375, 82.958984375, 82.97119140625, 82.9833984375,
  82.99560546875, 83.0078125, 83.02001953125, 83.0322265625, 83.04443359375,
  83.056640625, 83.06884765625, 83.0810546875, 83.09326171875, 83.10546875,
  83.11767578125, 83.1298828125, 83.14208984375, 83.154296875, 83.16650390625,
  83.1787109375, 83.19091796875, 83.203125, 83.21533203125, 83.2275390625,
  83.23974609375, 83.251953125, 83.26416015625, 83.2763671875, 83.28857421875,
  83.30078125, 83.31298828125, 83.3251953125, 83.33740234375, 83.349609375,
  83.36181640625, 83.3740234375, 83.38623046875, 83.3984375, 83.41064453125,
  83.4228515625, 83.43505859375, 83.447265625, 83.45947265625, 83.4716796875,
  83.48388671875, 83.49609375, 83.50830078125, 83.5205078125, 83.53271484375,
  83.544921875, 83.55712890625, 83.5693359375, 83.58154296875, 83.59375,
  83.60595703125, 83.6181640625, 83.63037109375, 83.642578125, 83.65478515625,
  83.6669921875, 83.67919921875, 83.69140625, 83.70361328125, 83.7158203125,
  83.72802734375, 83.740234375, 83.75244140625, 83.7646484375, 83.77685546875,
  83.7890625, 83.80126953125, 83.8134765625, 83.82568359375, 83.837890625,
  83.85009765625, 83.8623046875, 83.87451171875, 83.88671875, 83.89892578125,
  83.9111328125, 83.92333984375, 83.935546875, 83.94775390625, 83.9599609375,
  83.97216796875, 83.984375, 83.99658203125, 84.0087890625, 84.02099609375,
  84.033203125, 84.04541015625, 84.0576171875, 84.06982421875, 84.08203125,
  84.09423828125, 84.1064453125, 84.11865234375, 84.130859375, 84.14306640625,
  84.1552734375, 84.16748046875, 84.1796875, 84.19189453125, 84.2041015625,
  84.21630859375, 84.228515625, 84.24072265625, 84.2529296875, 84.26513671875,
  84.27734375, 84.28955078125, 84.3017578125, 84.31396484375, 84.326171875,
  84.33837890625, 84.3505859375, 84.36279296875, 84.375, 84.38720703125,
  84.3994140625, 84.41162109375, 84.423828125, 84.43603515625, 84.4482421875,
  84.46044921875, 84.47265625, 84.48486328125, 84.4970703125, 84.50927734375,
  84.521484375, 84.53369140625, 84.5458984375, 84.55810546875, 84.5703125,
  84.58251953125, 84.5947265625, 84.60693359375, 84.619140625, 84.63134765625,
  84.6435546875, 84.65576171875, 84.66796875, 84.68017578125, 84.6923828125,
  84.70458984375, 84.716796875, 84.72900390625, 84.7412109375, 84.75341796875,
  84.765625, 84.77783203125, 84.7900390625, 84.80224609375, 84.814453125,
  84.82666015625, 84.8388671875, 84.85107421875, 84.86328125, 84.87548828125,
  84.8876953125, 84.89990234375, 84.912109375, 84.92431640625, 84.9365234375,
  84.94873046875, 84.9609375, 84.97314453125, 84.9853515625, 84.99755859375,
  85.009765625, 85.02197265625, 85.0341796875, 85.04638671875, 85.05859375,
  85.07080078125, 85.0830078125, 85.09521484375, 85.107421875, 85.11962890625,
  85.1318359375, 85.14404296875, 85.15625, 85.16845703125, 85.1806640625,
  85.19287109375, 85.205078125, 85.21728515625, 85.2294921875, 85.24169921875,
  85.25390625, 85.26611328125, 85.2783203125, 85.29052734375, 85.302734375,
  85.31494140625, 85.3271484375, 85.33935546875, 85.3515625, 85.36376953125,
  85.3759765625, 85.38818359375, 85.400390625, 85.41259765625, 85.4248046875,
  85.43701171875, 85.44921875, 85.46142578125, 85.4736328125, 85.48583984375,
  85.498046875, 85.51025390625, 85.5224609375, 85.53466796875, 85.546875,
  85.55908203125, 85.5712890625, 85.58349609375, 85.595703125, 85.60791015625,
  85.6201171875, 85.63232421875, 85.64453125, 85.65673828125, 85.6689453125,
  85.68115234375, 85.693359375, 85.70556640625, 85.7177734375, 85.72998046875,
  85.7421875, 85.75439453125, 85.7666015625, 85.77880859375, 85.791015625,
  85.80322265625, 85.8154296875, 85.82763671875, 85.83984375, 85.85205078125,
  85.8642578125, 85.87646484375, 85.888671875, 85.90087890625, 85.9130859375,
  85.92529296875, 85.9375, 85.94970703125, 85.9619140625, 85.97412109375,
  85.986328125, 85.99853515625, 86.0107421875, 86.02294921875, 86.03515625,
  86.04736328125, 86.0595703125, 86.07177734375, 86.083984375, 86.09619140625,
  86.1083984375, 86.12060546875, 86.1328125, 86.14501953125, 86.1572265625,
  86.16943359375, 86.181640625, 86.19384765625, 86.2060546875, 86.21826171875,
  86.23046875, 86.24267578125, 86.2548828125, 86.26708984375, 86.279296875,
  86.29150390625, 86.3037109375, 86.31591796875, 86.328125, 86.34033203125,
  86.3525390625, 86.36474609375, 86.376953125, 86.38916015625, 86.4013671875,
  86.41357421875, 86.42578125, 86.43798828125, 86.4501953125, 86.46240234375,
  86.474609375, 86.48681640625, 86.4990234375, 86.51123046875, 86.5234375,
  86.53564453125, 86.5478515625, 86.56005859375, 86.572265625, 86.58447265625,
  86.5966796875, 86.60888671875, 86.62109375, 86.63330078125, 86.6455078125,
  86.65771484375, 86.669921875, 86.68212890625, 86.6943359375, 86.70654296875,
  86.71875, 86.73095703125, 86.7431640625, 86.75537109375, 86.767578125,
  86.77978515625, 86.7919921875, 86.80419921875, 86.81640625, 86.82861328125,
  86.8408203125, 86.85302734375, 86.865234375, 86.87744140625, 86.8896484375,
  86.90185546875, 86.9140625, 86.92626953125, 86.9384765625, 86.95068359375,
  86.962890625, 86.97509765625, 86.9873046875, 86.99951171875, 87.01171875,
  87.02392578125, 87.0361328125, 87.04833984375, 87.060546875, 87.07275390625,
  87.0849609375, 87.09716796875, 87.109375, 87.12158203125, 87.1337890625,
  87.14599609375, 87.158203125, 87.17041015625, 87.1826171875, 87.19482421875,
  87.20703125, 87.21923828125, 87.2314453125, 87.24365234375, 87.255859375,
  87.26806640625, 87.2802734375, 87.29248046875, 87.3046875, 87.31689453125,
  87.3291015625, 87.34130859375, 87.353515625, 87.36572265625, 87.3779296875,
  87.39013671875, 87.40234375, 87.41455078125, 87.4267578125, 87.43896484375,
  87.451171875, 87.46337890625, 87.4755859375, 87.48779296875, 87.5,
  87.51220703125, 87.5244140625, 87.53662109375, 87.548828125, 87.56103515625,
  87.5732421875, 87.58544921875, 87.59765625, 87.60986328125, 87.6220703125,
  87.63427734375, 87.646484375, 87.65869140625, 87.6708984375, 87.68310546875,
  87.6953125, 87.70751953125, 87.7197265625, 87.73193359375, 87.744140625,
  87.75634765625, 87.7685546875, 87.78076171875, 87.79296875, 87.80517578125,
  87.8173828125, 87.82958984375, 87.841796875, 87.85400390625, 87.8662109375,
  87.87841796875, 87.890625, 87.90283203125, 87.9150390625, 87.92724609375,
  87.939453125, 87.95166015625, 87.9638671875, 87.97607421875, 87.98828125,
  88.00048828125, 88.0126953125, 88.02490234375, 88.037109375, 88.04931640625,
  88.0615234375, 88.07373046875, 88.0859375, 88.09814453125, 88.1103515625,
  88.12255859375, 88.134765625, 88.14697265625, 88.1591796875, 88.17138671875,
  88.18359375, 88.19580078125, 88.2080078125, 88.22021484375, 88.232421875,
  88.24462890625, 88.2568359375, 88.26904296875, 88.28125, 88.29345703125,
  88.3056640625, 88.31787109375, 88.330078125, 88.34228515625, 88.3544921875,
  88.36669921875, 88.37890625, 88.39111328125, 88.4033203125, 88.41552734375,
  88.427734375, 88.43994140625, 88.4521484375, 88.46435546875, 88.4765625,
  88.48876953125, 88.5009765625, 88.51318359375, 88.525390625, 88.53759765625,
  88.5498046875, 88.56201171875, 88.57421875, 88.58642578125, 88.5986328125,
  88.61083984375, 88.623046875, 88.63525390625, 88.6474609375, 88.65966796875,
  88.671875, 88.68408203125, 88.6962890625, 88.70849609375, 88.720703125,
  88.73291015625, 88.7451171875, 88.75732421875, 88.76953125, 88.78173828125,
  88.7939453125, 88.80615234375, 88.818359375, 88.83056640625, 88.8427734375,
  88.85498046875, 88.8671875, 88.87939453125, 88.8916015625, 88.90380859375,
  88.916015625, 88.92822265625, 88.9404296875, 88.95263671875, 88.96484375,
  88.97705078125, 88.9892578125, 89.00146484375, 89.013671875, 89.02587890625,
  89.0380859375, 89.05029296875, 89.0625, 89.07470703125, 89.0869140625,
  89.09912109375, 89.111328125, 89.12353515625, 89.1357421875, 89.14794921875,
  89.16015625, 89.17236328125, 89.1845703125, 89.19677734375, 89.208984375,
  89.22119140625, 89.2333984375, 89.24560546875, 89.2578125, 89.27001953125,
  89.2822265625, 89.29443359375, 89.306640625, 89.31884765625, 89.3310546875,
  89.34326171875, 89.35546875, 89.36767578125, 89.3798828125, 89.39208984375,
  89.404296875, 89.41650390625, 89.4287109375, 89.44091796875, 89.453125,
  89.46533203125, 89.4775390625, 89.48974609375, 89.501953125, 89.51416015625,
  89.5263671875, 89.53857421875, 89.55078125, 89.56298828125, 89.5751953125,
  89.58740234375, 89.599609375, 89.61181640625, 89.6240234375, 89.63623046875,
  89.6484375, 89.66064453125, 89.6728515625, 89.68505859375, 89.697265625,
  89.70947265625, 89.7216796875, 89.73388671875, 89.74609375, 89.75830078125,
  89.7705078125, 89.78271484375, 89.794921875, 89.80712890625, 89.8193359375,
  89.83154296875, 89.84375, 89.85595703125, 89.8681640625, 89.88037109375,
  89.892578125, 89.90478515625, 89.9169921875, 89.92919921875, 89.94140625,
  89.95361328125, 89.9658203125, 89.97802734375, 89.990234375, 90.00244140625,
  90.0146484375, 90.02685546875, 90.0390625, 90.05126953125, 90.0634765625,
  90.07568359375, 90.087890625, 90.10009765625, 90.1123046875, 90.12451171875,
  90.13671875, 90.14892578125, 90.1611328125, 90.17333984375, 90.185546875,
  90.19775390625, 90.2099609375, 90.22216796875, 90.234375, 90.24658203125,
  90.2587890625, 90.27099609375, 90.283203125, 90.29541015625, 90.3076171875,
  90.31982421875, 90.33203125, 90.34423828125, 90.3564453125, 90.36865234375,
  90.380859375, 90.39306640625, 90.4052734375, 90.41748046875, 90.4296875,
  90.44189453125, 90.4541015625, 90.46630859375, 90.478515625, 90.49072265625,
  90.5029296875, 90.51513671875, 90.52734375, 90.53955078125, 90.5517578125,
  90.56396484375, 90.576171875, 90.58837890625, 90.6005859375, 90.61279296875,
  90.625, 90.63720703125, 90.6494140625, 90.66162109375, 90.673828125,
  90.68603515625, 90.6982421875, 90.71044921875, 90.72265625, 90.73486328125,
  90.7470703125, 90.75927734375, 90.771484375, 90.78369140625, 90.7958984375,
  90.80810546875, 90.8203125, 90.83251953125, 90.8447265625, 90.85693359375,
  90.869140625, 90.88134765625, 90.8935546875, 90.90576171875, 90.91796875,
  90.93017578125, 90.9423828125, 90.95458984375, 90.966796875, 90.97900390625,
  90.9912109375, 91.00341796875, 91.015625, 91.02783203125, 91.0400390625,
  91.05224609375, 91.064453125, 91.07666015625, 91.0888671875, 91.10107421875,
  91.11328125, 91.12548828125, 91.1376953125, 91.14990234375, 91.162109375,
  91.17431640625, 91.1865234375, 91.19873046875, 91.2109375, 91.22314453125,
  91.2353515625, 91.24755859375, 91.259765625, 91.27197265625, 91.2841796875,
  91.29638671875, 91.30859375, 91.32080078125, 91.3330078125, 91.34521484375,
  91.357421875, 91.36962890625, 91.3818359375, 91.39404296875, 91.40625,
  91.41845703125, 91.4306640625, 91.44287109375, 91.455078125, 91.46728515625,
  91.4794921875, 91.49169921875, 91.50390625, 91.51611328125, 91.5283203125,
  91.54052734375, 91.552734375, 91.56494140625, 91.5771484375, 91.58935546875,
  91.6015625, 91.61376953125, 91.6259765625, 91.63818359375, 91.650390625,
  91.66259765625, 91.6748046875, 91.68701171875, 91.69921875, 91.71142578125,
  91.7236328125, 91.73583984375, 91.748046875, 91.76025390625, 91.7724609375,
  91.78466796875, 91.796875, 91.80908203125, 91.8212890625, 91.83349609375,
  91.845703125, 91.85791015625, 91.8701171875, 91.88232421875, 91.89453125,
  91.90673828125, 91.9189453125, 91.93115234375, 91.943359375, 91.95556640625,
  91.9677734375, 91.97998046875, 91.9921875, 92.00439453125, 92.0166015625,
  92.02880859375, 92.041015625, 92.05322265625, 92.0654296875, 92.07763671875,
  92.08984375, 92.10205078125, 92.1142578125, 92.12646484375, 92.138671875,
  92.15087890625, 92.1630859375, 92.17529296875, 92.1875, 92.19970703125,
  92.2119140625, 92.22412109375, 92.236328125, 92.24853515625, 92.2607421875,
  92.27294921875, 92.28515625, 92.29736328125, 92.3095703125, 92.32177734375,
  92.333984375, 92.34619140625, 92.3583984375, 92.37060546875, 92.3828125,
  92.39501953125, 92.4072265625, 92.41943359375, 92.431640625, 92.44384765625,
  92.4560546875, 92.46826171875, 92.48046875, 92.49267578125, 92.5048828125,
  92.51708984375, 92.529296875, 92.54150390625, 92.5537109375, 92.56591796875,
  92.578125, 92.59033203125, 92.6025390625, 92.61474609375, 92.626953125,
  92.63916015625, 92.6513671875, 92.66357421875, 92.67578125, 92.68798828125,
  92.7001953125, 92.71240234375, 92.724609375, 92.73681640625, 92.7490234375,
  92.76123046875, 92.7734375, 92.78564453125, 92.7978515625, 92.81005859375,
  92.822265625, 92.83447265625, 92.8466796875, 92.85888671875, 92.87109375,
  92.88330078125, 92.8955078125, 92.90771484375, 92.919921875, 92.93212890625,
  92.9443359375, 92.95654296875, 92.96875, 92.98095703125, 92.9931640625,
  93.00537109375, 93.017578125, 93.02978515625, 93.0419921875, 93.05419921875,
  93.06640625, 93.07861328125, 93.0908203125, 93.10302734375, 93.115234375,
  93.12744140625, 93.1396484375, 93.15185546875, 93.1640625, 93.17626953125,
  93.1884765625, 93.20068359375, 93.212890625, 93.22509765625, 93.2373046875,
  93.24951171875, 93.26171875, 93.27392578125, 93.2861328125, 93.29833984375,
  93.310546875, 93.32275390625, 93.3349609375, 93.34716796875, 93.359375,
  93.37158203125, 93.3837890625, 93.39599609375, 93.408203125, 93.42041015625,
  93.4326171875, 93.44482421875, 93.45703125, 93.46923828125, 93.4814453125,
  93.49365234375, 93.505859375, 93.51806640625, 93.5302734375, 93.54248046875,
  93.5546875, 93.56689453125, 93.5791015625, 93.59130859375, 93.603515625,
  93.61572265625, 93.6279296875, 93.64013671875, 93.65234375, 93.66455078125,
  93.6767578125, 93.68896484375, 93.701171875, 93.71337890625, 93.7255859375,
  93.73779296875, 93.75, 93.76220703125, 93.7744140625, 93.78662109375,
  93.798828125, 93.81103515625, 93.8232421875, 93.83544921875, 93.84765625,
  93.85986328125, 93.8720703125, 93.88427734375, 93.896484375, 93.90869140625,
  93.9208984375, 93.93310546875, 93.9453125, 93.95751953125, 93.9697265625,
  93.98193359375, 93.994140625, 94.00634765625, 94.0185546875, 94.03076171875,
  94.04296875, 94.05517578125, 94.0673828125, 94.07958984375, 94.091796875,
  94.10400390625, 94.1162109375, 94.12841796875, 94.140625, 94.15283203125,
  94.1650390625, 94.17724609375, 94.189453125, 94.20166015625, 94.2138671875,
  94.22607421875, 94.23828125, 94.25048828125, 94.2626953125, 94.27490234375,
  94.287109375, 94.29931640625, 94.3115234375, 94.32373046875, 94.3359375,
  94.34814453125, 94.3603515625, 94.37255859375, 94.384765625, 94.39697265625,
  94.4091796875, 94.42138671875, 94.43359375, 94.44580078125, 94.4580078125,
  94.47021484375, 94.482421875, 94.49462890625, 94.5068359375, 94.51904296875,
  94.53125, 94.54345703125, 94.5556640625, 94.56787109375, 94.580078125,
  94.59228515625, 94.6044921875, 94.61669921875, 94.62890625, 94.64111328125,
  94.6533203125, 94.66552734375, 94.677734375, 94.68994140625, 94.7021484375,
  94.71435546875, 94.7265625, 94.73876953125, 94.7509765625, 94.76318359375,
  94.775390625, 94.78759765625, 94.7998046875, 94.81201171875, 94.82421875,
  94.83642578125, 94.8486328125, 94.86083984375, 94.873046875, 94.88525390625,
  94.8974609375, 94.90966796875, 94.921875, 94.93408203125, 94.9462890625,
  94.95849609375, 94.970703125, 94.98291015625, 94.9951171875, 95.00732421875,
  95.01953125, 95.03173828125, 95.0439453125, 95.05615234375, 95.068359375,
  95.08056640625, 95.0927734375, 95.10498046875, 95.1171875, 95.12939453125,
  95.1416015625, 95.15380859375, 95.166015625, 95.17822265625, 95.1904296875,
  95.20263671875, 95.21484375, 95.22705078125, 95.2392578125, 95.25146484375,
  95.263671875, 95.27587890625, 95.2880859375, 95.30029296875, 95.3125,
  95.32470703125, 95.3369140625, 95.34912109375, 95.361328125, 95.37353515625,
  95.3857421875, 95.39794921875, 95.41015625, 95.42236328125, 95.4345703125,
  95.44677734375, 95.458984375, 95.47119140625, 95.4833984375, 95.49560546875,
  95.5078125, 95.52001953125, 95.5322265625, 95.54443359375, 95.556640625,
  95.56884765625, 95.5810546875, 95.59326171875, 95.60546875, 95.61767578125,
  95.6298828125, 95.64208984375, 95.654296875, 95.66650390625, 95.6787109375,
  95.69091796875, 95.703125, 95.71533203125, 95.7275390625, 95.73974609375,
  95.751953125, 95.76416015625, 95.7763671875, 95.78857421875, 95.80078125,
  95.81298828125, 95.8251953125, 95.83740234375, 95.849609375, 95.86181640625,
  95.8740234375, 95.88623046875, 95.8984375, 95.91064453125, 95.9228515625,
  95.93505859375, 95.947265625, 95.95947265625, 95.9716796875, 95.98388671875,
  95.99609375, 96.00830078125, 96.0205078125, 96.03271484375, 96.044921875,
  96.05712890625, 96.0693359375, 96.08154296875, 96.09375, 96.10595703125,
  96.1181640625, 96.13037109375, 96.142578125, 96.15478515625, 96.1669921875,
  96.17919921875, 96.19140625, 96.20361328125, 96.2158203125, 96.22802734375,
  96.240234375, 96.25244140625, 96.2646484375, 96.27685546875, 96.2890625,
  96.30126953125, 96.3134765625, 96.32568359375, 96.337890625, 96.35009765625,
  96.3623046875, 96.37451171875, 96.38671875, 96.39892578125, 96.4111328125,
  96.42333984375, 96.435546875, 96.44775390625, 96.4599609375, 96.47216796875,
  96.484375, 96.49658203125, 96.5087890625, 96.52099609375, 96.533203125,
  96.54541015625, 96.5576171875, 96.56982421875, 96.58203125, 96.59423828125,
  96.6064453125, 96.61865234375, 96.630859375, 96.64306640625, 96.6552734375,
  96.66748046875, 96.6796875, 96.69189453125, 96.7041015625, 96.71630859375,
  96.728515625, 96.74072265625, 96.7529296875, 96.76513671875, 96.77734375,
  96.78955078125, 96.8017578125, 96.81396484375, 96.826171875, 96.83837890625,
  96.8505859375, 96.86279296875, 96.875, 96.88720703125, 96.8994140625,
  96.91162109375, 96.923828125, 96.93603515625, 96.9482421875, 96.96044921875,
  96.97265625, 96.98486328125, 96.9970703125, 97.00927734375, 97.021484375,
  97.03369140625, 97.0458984375, 97.05810546875, 97.0703125, 97.08251953125,
  97.0947265625, 97.10693359375, 97.119140625, 97.13134765625, 97.1435546875,
  97.15576171875, 97.16796875, 97.18017578125, 97.1923828125, 97.20458984375,
  97.216796875, 97.22900390625, 97.2412109375, 97.25341796875, 97.265625,
  97.27783203125, 97.2900390625, 97.30224609375, 97.314453125, 97.32666015625,
  97.3388671875, 97.35107421875, 97.36328125, 97.37548828125, 97.3876953125,
  97.39990234375, 97.412109375, 97.42431640625, 97.4365234375, 97.44873046875,
  97.4609375, 97.47314453125, 97.4853515625, 97.49755859375, 97.509765625,
  97.52197265625, 97.5341796875, 97.54638671875, 97.55859375, 97.57080078125,
  97.5830078125, 97.59521484375, 97.607421875, 97.61962890625, 97.6318359375,
  97.64404296875, 97.65625, 97.66845703125, 97.6806640625, 97.69287109375,
  97.705078125, 97.71728515625, 97.7294921875, 97.74169921875, 97.75390625,
  97.76611328125, 97.7783203125, 97.79052734375, 97.802734375, 97.81494140625,
  97.8271484375, 97.83935546875, 97.8515625, 97.86376953125, 97.8759765625,
  97.88818359375, 97.900390625, 97.91259765625, 97.9248046875, 97.93701171875,
  97.94921875, 97.96142578125, 97.9736328125, 97.98583984375, 97.998046875,
  98.01025390625, 98.0224609375, 98.03466796875, 98.046875, 98.05908203125,
  98.0712890625, 98.08349609375, 98.095703125, 98.10791015625, 98.1201171875,
  98.13232421875, 98.14453125, 98.15673828125, 98.1689453125, 98.18115234375,
  98.193359375, 98.20556640625, 98.2177734375, 98.22998046875, 98.2421875,
  98.25439453125, 98.2666015625, 98.27880859375, 98.291015625, 98.30322265625,
  98.3154296875, 98.32763671875, 98.33984375, 98.35205078125, 98.3642578125,
  98.37646484375, 98.388671875, 98.40087890625, 98.4130859375, 98.42529296875,
  98.4375, 98.44970703125, 98.4619140625, 98.47412109375, 98.486328125,
  98.49853515625, 98.5107421875, 98.52294921875, 98.53515625, 98.54736328125,
  98.5595703125, 98.57177734375, 98.583984375, 98.59619140625, 98.6083984375,
  98.62060546875, 98.6328125, 98.64501953125, 98.6572265625, 98.66943359375,
  98.681640625, 98.69384765625, 98.7060546875, 98.71826171875, 98.73046875,
  98.74267578125, 98.7548828125, 98.76708984375, 98.779296875, 98.79150390625,
  98.8037109375, 98.81591796875, 98.828125, 98.84033203125, 98.8525390625,
  98.86474609375, 98.876953125, 98.88916015625, 98.9013671875, 98.91357421875,
  98.92578125, 98.93798828125, 98.9501953125, 98.96240234375, 98.974609375,
  98.98681640625, 98.9990234375, 99.01123046875, 99.0234375, 99.03564453125,
  99.0478515625, 99.06005859375, 99.072265625, 99.08447265625, 99.0966796875,
  99.10888671875, 99.12109375, 99.13330078125, 99.1455078125, 99.15771484375,
  99.169921875, 99.18212890625, 99.1943359375, 99.20654296875, 99.21875,
  99.23095703125, 99.2431640625, 99.25537109375, 99.267578125, 99.27978515625,
  99.2919921875, 99.30419921875, 99.31640625, 99.32861328125, 99.3408203125,
  99.35302734375, 99.365234375, 99.37744140625, 99.3896484375, 99.40185546875,
  99.4140625, 99.42626953125, 99.4384765625, 99.45068359375, 99.462890625,
  99.47509765625, 99.4873046875, 99.49951171875, 99.51171875, 99.52392578125,
  99.5361328125, 99.54833984375, 99.560546875, 99.57275390625, 99.5849609375,
  99.59716796875, 99.609375, 99.62158203125, 99.6337890625, 99.64599609375,
  99.658203125, 99.67041015625, 99.6826171875, 99.69482421875, 99.70703125,
  99.71923828125, 99.7314453125, 99.74365234375, 99.755859375, 99.76806640625,
  99.7802734375, 99.79248046875, 99.8046875, 99.81689453125, 99.8291015625,
  99.84130859375, 99.853515625, 99.86572265625, 99.8779296875, 99.89013671875,
  99.90234375, 99.91455078125, 99.9267578125, 99.93896484375, 99.951171875,
  99.96337890625, 99.9755859375, 99.98779296875, 100.0,
];

const methods = {
  scopeSearch(req, limit, offset) {
    // Where
    let $where = {};

    if (req.query.AnimalID) $where["AnimalID"] = req.query.AnimalID;

    if (req.query.ProductionStatusID)
      $where["ProductionStatusID"] = req.query.ProductionStatusID;

    if (req.query.AnimalStatusID)
      $where["AnimalStatusID"] = req.query.AnimalStatusID;

    if (req.query.AnimalIdentificationID)
      $where["AnimalIdentificationID"] = {
        [Op.like]: "%" + req.query.AnimalIdentificationID + "%",
      };

    if (req.query.AnimalNationalID)
      $where["AnimalNationalID"] = {
        [Op.like]: "%" + req.query.AnimalNationalID + "%",
      };

    if (req.query.AnimalEarID)
      $where["AnimalEarID"] = {
        [Op.like]: "%" + req.query.AnimalEarID + "%",
      };

    if (req.query.AnimalMicrochip)
      $where["AnimalMicrochip"] = {
        [Op.like]: "%" + req.query.AnimalMicrochip + "%",
      };

    if (req.query.AnimalSexID) $where["AnimalSexID"] = req.query.AnimalSexID;

    if (req.query.AnimalTypeID)
      $where["AnimalTypeID"] = {
        [Op.in]: JSON.parse(req.query.AnimalTypeID),
      };

    if (req.query.AnimalName)
      $where["AnimalName"] = {
        [Op.like]: "%" + req.query.AnimalName + "%",
      };

    if (req.query.FarmID) $where["FarmID"] = req.query.FarmID;
    if (req.query.AnimalFirstBreed)
      $where["AnimalFirstBreed"] = req.query.AnimalFirstBreed;
    if (req.query.AnimalFatherID)
      $where["AnimalFatherID"] = req.query.AnimalFatherID;
    if (req.query.AnimalMotherID)
      $where["AnimalMotherID"] = req.query.AnimalMotherID;

    if (req.query.AnimalBornType)
      $where["AnimalBornType"] = req.query.AnimalBornType;
    if (req.query.AnimalBornTypeID)
      $where["AnimalBornTypeID"] = req.query.AnimalBornTypeID;

    if (req.query.AnimalSource) $where["AnimalSource"] = req.query.AnimalSource;

    if (req.query.SourceFarmID) $where["SourceFarmID"] = req.query.SourceFarmID;
    if (req.query.OrganizationID)
      $where["OrganizationID"] = req.query.OrganizationID;
    if (req.query.OrganizationZoneID)
      $where["OrganizationZoneID"] = req.query.OrganizationZoneID;

    if (req.query.AnimalAgeStart) {
      let date1 = dayjs()
        .subtract(req.query.AnimalAgeStart, "year")
        .format("YYYY-MM-DD");

      $where["AnimalBirthDate"] = { [Op.lte]: date1 };

      if (req.query.AnimalAgeTo) {
        let date2 = dayjs()
          .subtract(parseInt(req.query.AnimalAgeTo) + 1, "year")
          .format("YYYY-MM-DD");
        $where["AnimalBirthDate"] = {
          [Op.and]: { [Op.lte]: date1, [Op.gte]: date2 },
        };
      }
    }

    let AnimalBreedArr = [];

    if (req.query.AnimalBreedID1) {
      AnimalBreedArr.push(req.query.AnimalBreedID1);
    }

    if (req.query.AnimalBreedID2) {
      AnimalBreedArr.push(req.query.AnimalBreedID2);
    }

    if (req.query.AnimalBreedID3) {
      AnimalBreedArr.push(req.query.AnimalBreedID3);
    }

    if (req.query.AnimalBreedID4) {
      AnimalBreedArr.push(req.query.AnimalBreedID4);
    }

    if (req.query.AnimalBreedID5) {
      AnimalBreedArr.push(req.query.AnimalBreedID5);
    }

    $where[Op.and] = [];
    AnimalBreedArr.forEach((value) => {
      $where[Op.and].push({
        [Op.or]: {
          AnimalBreedID1: value,
          AnimalBreedID2: value,
          AnimalBreedID3: value,
          AnimalBreedID4: value,
          AnimalBreedID5: value,
        },
      });
    });

    // ช่วงวันเกิด
    if (req.query.AnimalBirthDateStart) {
      $where["AnimalBirthDate"] = {
        [Op.between]: [
          req.query.AnimalBirthDateStart,
          req.query.AnimalBirthDateEnd,
        ],
      };
    }

    // ProjectID
    let WhereProject = null;
    if (req.query.ProjectID) {
      WhereProject = {
        ProjectID: {
          [Op.in]: JSON.parse(req.query.ProjectID),
        },
      };
    }

    if (req.query.isActive) $where["isActive"] = req.query.isActive;
    if (req.query.CreatedUserID)
      $where["CreatedUserID"] = req.query.CreatedUserID;
    if (req.query.UpdatedUserID)
      $where["UpdatedUserID"] = req.query.UpdatedUserID;

    $where["isRemove"] = 0;
    const query = Object.keys($where).length > 0 ? { where: $where } : {};

    // Order
    $order = [["AnimalID", "ASC"]];
    if (req.query.orderByField && req.query.orderBy)
      $order = [
        [
          req.query.orderByField,
          req.query.orderBy.toLowerCase() == "desc" ? "desc" : "asc",
        ],
      ];
    query["order"] = $order;

    if (!isNaN(limit)) query["limit"] = limit;

    if (!isNaN(offset)) query["offset"] = offset;

    query["include"] = [
      { all: true, required: false },
      {
        model: Project,
        where: WhereProject,
      },
    ];

    return { query: query };
  },

  find(req) {
    const limit = +(req.query.size || config.pageLimit);
    const offset = +(limit * ((req.query.page || 1) - 1));
    const _q = methods.scopeSearch(req, limit, offset);
    return new Promise(async (resolve, reject) => {
      try {
        Promise.all([db.findAll(_q.query), db.count(_q.query)])
          .then(async (result) => {
            let rows = result[0],
              count = result[1];

            rows = await Promise.all(
              rows.map(async (data) => {
                let projectArray = [];
                data.Projects.forEach((element) => {
                  projectArray.push(element.ProjectName);
                });

                if (data.GiveBirthSelfID != null) {
                  data.GiveBirthSelf = GiveBirth.findByPk(data.GiveBirthSelfID);
                }

                data = {
                  ...data.toJSON(),
                  Projects: projectArray,
                  ProjectID: JSON.parse(data.toJSON().ProjectID),
                  EventLatest: await data.EventLatest(),
                };

                return data;
              })
            );
            //

            resolve({
              total: count,
              lastPage: Math.ceil(count / limit),
              currPage: +req.query.page || 1,
              rows: rows,
            });
          })
          .catch((error) => {
            reject(error);
          });
      } catch (error) {
        reject(error);
      }
    });
  },

  findById(id) {
    return new Promise(async (resolve, reject) => {
      try {
        let obj = await db.findByPk(id, {
          include: { all: true, required: false },
        });

        if (!obj) reject(ErrorNotFound("id: not found"));

        let projectArray = [];
        obj.toJSON().Projects.forEach((element) => {
          projectArray.push(element.ProjectName);
        });

        let GiveBirthSelf = undefined;
        if (obj.GiveBirthSelfID != null) {
          GiveBirthSelf = await GiveBirth.findByPk(obj.GiveBirthSelfID);
        }

        obj = {
          ...obj.toJSON(),
          Projects: projectArray,
          ProjectID: JSON.parse(obj.toJSON().ProjectID),
          GiveBirthSelf: GiveBirthSelf,
          EventLatest: await obj.EventLatest(),
        };
        resolve(obj);
      } catch (error) {
        reject(ErrorNotFound(error));
      }
    });
  },

  insert(data) {
    return new Promise(async (resolve, reject) => {
      try {
        //check เงื่อนไขตรงนี้ได้
        if (data.ProjectID) {
          if (!Array.isArray(data.ProjectID)) {
            reject(ErrorBadRequest("Project ID ต้องอยู่ในรูปแบบ Array"));
            return;
          }
          var ProjectIDList = [...data.ProjectID];
          data.ProjectID = JSON.stringify(data.ProjectID);
        }

        let AnimalBreedArr = [
          "AnimalBreedPercent1",
          "AnimalBreedPercent2",
          "AnimalBreedPercent3",
          "AnimalBreedPercent4",
          "AnimalBreedPercent5",
        ];

        AnimalBreedArr.forEach((b) => {
          if (data[b]) {
            const found = HF.find((element) => {
              return Math.abs(element - data[b]) < 0.00732421875; // = 0.0048828125
            });

            data[b] = found.toFixed(3);
          }
        });

        const obj = new db(data);
        if (!obj.AnimalNationalID) {
          obj.AnimalNationalID = null;
        }
        if (!obj.AnimalEarID) {
          obj.AnimalEarID = null;
        }
        if (!obj.AnimalMicrochip) {
          obj.AnimalMicrochip = null;
        }

        const inserted = await obj.save();

        if (obj.GiveBirthSelfID) {
          data = {
            MotherAnimalID: obj.AnimalMotherID,
            AnimalID: inserted.AnimalID,
            // FollowDate: null,
            // Weigth: null,
            ResponsibilityStaffID: inserted.CreatedUserID,
            CreatedUserID: inserted.CreatedUserID,
          };
          var yearling = new Yearling(data);
          const inserted1 = await yearling.save();
        }

        if (data.ProjectID) {
          // insert AnimalToAnimalType
          ProjectIDList.forEach((ProjectID) => {
            const obj1 = AnimalToProject.create({
              AnimalID: inserted.AnimalID,
              ProjectID: ProjectID,
              CreatedUserID: data.CreatedUserID,
            });
          });
        }

        let res = methods.findById(inserted.AnimalID);

        resolve(res);
      } catch (error) {
        reject(ErrorBadRequest(error.message));
      }
    });
  },

  update(id, data) {
    return new Promise(async (resolve, reject) => {
      try {
        // Check ID
        const obj = await db.findByPk(id);
        if (!obj) reject(ErrorNotFound("id: not found"));

        // Update
        data.AnimalID = parseInt(id);

        if (data.ProjectID) {
          if (!Array.isArray(data.ProjectID)) {
            reject(ErrorBadRequest("Project ID ต้องอยู่ในรูปแบบ Array"));
            return;
          }

          var ProjectIDList = [...data.ProjectID];
          data.ProjectID = JSON.stringify(data.ProjectID);
        }

        let AnimalBreedArr = [
          "AnimalBreedPercent1",
          "AnimalBreedPercent2",
          "AnimalBreedPercent3",
          "AnimalBreedPercent4",
          "AnimalBreedPercent5",
        ];

        AnimalBreedArr.forEach((b) => {
          if (data[b]) {
            const found = HF.find((element) => {
              return Math.abs(element - data[b]) < 0.00732421875; // = 0.0048828125
            });

            data[b] = found.toFixed(3);
          }
        });

        await db.update(data, { where: { AnimalID: id } });

        if (data.ProjectID === null) {
          AnimalToProject.destroy({
            where: {
              AnimalID: id,
            },
            // // truncate: true,
          });
        }

        if (data.ProjectID) {
          // insert AnimalToProject
          const searchATP = await AnimalToProject.findAll({
            where: { AnimalID: obj.AnimalID },
          });

          // loop ATP ของทั้งหมดที่มาจาก DB
          searchATP.forEach((atp) => {
            // ตรวจสอบ array ที่ส่งมา กับ pta DB แต่ละตัวถ้าไม่มี แปลว่าโดนลบ
            if (!ProjectIDList.includes(atp.ProjectID)) {
              AnimalToProject.destroy({
                where: {
                  AnimalToProjectID: atp.AnimalToProjectID,
                },
              });
            }
          });

          ProjectIDList.forEach(async (ProjectID) => {
            const searchATPOne = await AnimalToProject.findOne({
              where: {
                AnimalID: obj.AnimalID,
                ProjectID: ProjectID,
              },
            });

            if (!searchATPOne) {
              const obj1 = AnimalToProject.create({
                AnimalID: obj.AnimalID,
                ProjectID: ProjectID,
                CreatedUserID: data.UpdatedUserID,
              });
            }
          });
        }
        let res = methods.findById(data.AnimalID);

        resolve(res);
      } catch (error) {
        reject(ErrorBadRequest(error.message));
      }
    });
  },

  delete(id) {
    return new Promise(async (resolve, reject) => {
      try {
        const obj = await db.findByPk(id);
        if (!obj) reject(ErrorNotFound("id: not found"));

        await db.update(
          { isRemove: 1, isActive: 0 },
          { where: { AnimalID: id } }
        );

        // delete ProjectToAnimalType
        const obj1 = AnimalToProject.destroy({
          where: { AnimalID: id },
          // // truncate: true,
        });

        resolve();
      } catch (error) {
        reject(error);
      }
    });
  },

  GenerateNumber(FarmID, BirthDate, AnimalTypeID) {
    // หมายเลขประจำตัวสัตว์ ระบบ auto generate ให้ มี FORMAT ตามปีเกิด + เลขทะเบียนฟาร์ม + running number 5 หลัก เช่น ปีเกิดคือ 2022 เลขทะเบียนฟาร์มคือ 101010-0001 เลขที่ได้จะเป็น 1022101010-0001-00001 กรณีที่ไม่ทราบปีเกิดให้ใช้ปีที่บันทึกข้อมูล
    return new Promise(async (resolve, reject) => {
      try {
        let date = new Date();
        if (BirthDate) {
          date = new Date(BirthDate);
        }
        let year = date.getFullYear();

        let farm = await Farm.findByPk(FarmID, {
          include: { all: true, required: false },
        });

        if (farm) {
          let animal = await db.max("AnimalIdentificationID", {
            where: {
              FarmID: FarmID,
              AnimalIdentificationID: {
                [Op.startsWith]: year,
              },
            },
          });

          if (animal) {
            let codeLastest = animal.substr(-5);
            codeLastest = parseInt(codeLastest) + 1;
            let number = 5 - parseInt(String(codeLastest).length);

            if (number != 0) {
              codeLastest = String(codeLastest);
              for (let i = 1; i <= number; i++) {
                codeLastest = "0" + codeLastest;
              }
            }

            AnimalNumberGenerate =
              year + farm.FarmIdentificationNumber + codeLastest;
          } else {
            AnimalNumberGenerate =
              year + farm.FarmIdentificationNumber + "00001";
          }

          //
          let AnimalTypeRes = await AnimalType.findByPk(AnimalTypeID);
          let AnimalGroupTypeRes = await AnimalGroupType.findByPk(
            AnimalTypeRes.AnimalGroupTypeID
          );
          let GroupTypeCode = AnimalGroupTypeRes.AnimalGroupTypeCode;

          if (GroupTypeCode.length < 2) {
            GroupTypeCode = "0" + AnimalGroupTypeRes.AnimalGroupTypeCode;
          }
          let TypeCode =
            GroupTypeCode +
            "" +
            AnimalTypeRes.AnimalTypeCode.slice(
              AnimalTypeRes.AnimalTypeCode.length - 1
            );

          let date2 = new Date();
          let year2 = date2.getFullYear();
          year2 = String(year2).slice(2);

          let ProvinceAndAmphur = farm.Amphur.AmphurCode.slice(0, 4);

          let animal2 = await db.max("AnimalEarID", {
            where: {
              AnimalEarID: {
                [Op.startsWith]: year2 + ProvinceAndAmphur + TypeCode,
              },
            },
          });
          //

          if (animal2) {
            let codeLastest = animal2.substr(-5);
            codeLastest = parseInt(codeLastest) + 1;
            let number = 5 - parseInt(String(codeLastest).length);

            if (number != 0) {
              codeLastest = String(codeLastest);
              for (let i = 1; i <= number; i++) {
                codeLastest = "0" + codeLastest;
              }
            }

            AnimalEarGenerate =
              year2 + ProvinceAndAmphur + TypeCode + codeLastest;
          } else {
            AnimalEarGenerate = year2 + ProvinceAndAmphur + TypeCode + "00001";
          }
        } else {
          reject(ErrorNotFound("Farm ID: not found"));
        }

        resolve({
          AnimalNumberGenerate: AnimalNumberGenerate,
          AnimalEarGenerate: AnimalEarGenerate,
        });
      } catch (error) {
        reject(ErrorNotFound("id: not found"));
      }
    });
  },

  GenerateBreed(AnimalFatherID, AnimalMotherID) {
    return new Promise(async (resolve, reject) => {
      try {
        let Father = await db.findByPk(AnimalFatherID);

        let Mother = await db.findByPk(AnimalMotherID);

        let Breed = [];

        if (Father.AnimalBreedID1) {
          Breed.push({
            AnimalBreedID: Father.AnimalBreedID1,
            AnimalBreedPercent: Father.AnimalBreedPercent1,
          });
        }

        if (Father.AnimalBreedID2) {
          Breed.push({
            AnimalBreedID: Father.AnimalBreedID2,
            AnimalBreedPercent: Father.AnimalBreedPercent2,
          });
        }

        if (Father.AnimalBreedID3) {
          Breed.push({
            AnimalBreedID: Father.AnimalBreedID3,
            AnimalBreedPercent: Father.AnimalBreedPercent3,
          });
        }

        if (Father.AnimalBreedID4) {
          Breed.push({
            AnimalBreedID: Father.AnimalBreedID4,
            AnimalBreedPercent: Father.AnimalBreedPercent4,
          });
        }

        if (Father.AnimalBreedID5) {
          Breed.push({
            AnimalBreedID: Father.AnimalBreedID5,
            AnimalBreedPercent: Father.AnimalBreedPercent5,
          });
        }

        if (Mother.AnimalBreedID1) {
          const getBreedIndex1 = Breed.findIndex(
            (breed) => breed.AnimalBreedID === Mother.AnimalBreedID1
          );

          if (getBreedIndex1 != -1) {
            Breed[getBreedIndex1].AnimalBreedPercent =
              parseFloat(Breed[getBreedIndex1].AnimalBreedPercent) +
              parseFloat(Mother.AnimalBreedPercent1);
          } else {
            Breed.push({
              AnimalBreedID: Mother.AnimalBreedID1,
              AnimalBreedPercent: Mother.AnimalBreedPercent1,
            });
          }
        }

        if (Mother.AnimalBreedID2) {
          const getBreedIndex2 = Breed.findIndex(
            (breed) => breed.AnimalBreedID === Mother.AnimalBreedID2
          );

          if (getBreedIndex2 != -1) {
            Breed[getBreedIndex2].AnimalBreedPercent =
              parseFloat(Breed[getBreedIndex2].AnimalBreedPercent) +
              parseFloat(Mother.AnimalBreedPercent2);
          } else {
            Breed.push({
              AnimalBreedID: Mother.AnimalBreedID2,
              AnimalBreedPercent: Mother.AnimalBreedPercent2,
            });
          }
        }

        if (Mother.AnimalBreedID3) {
          const getBreedIndex3 = Breed.findIndex(
            (breed) => breed.AnimalBreedID === Mother.AnimalBreedID3
          );

          if (getBreedIndex3 != -1) {
            Breed[getBreedIndex3].AnimalBreedPercent =
              parseFloat(Breed[getBreedIndex3].AnimalBreedPercent) +
              parseFloat(Mother.AnimalBreedPercent3);
          } else {
            Breed.push({
              AnimalBreedID: Mother.AnimalBreedID3,
              AnimalBreedPercent: Mother.AnimalBreedPercent3,
            });
          }
        }

        if (Mother.AnimalBreedID4) {
          const getBreedIndex4 = Breed.findIndex(
            (breed) => breed.AnimalBreedID === Mother.AnimalBreedID4
          );

          if (getBreedIndex4 != -1) {
            Breed[getBreedIndex4].AnimalBreedPercent =
              parseFloat(Breed[getBreedIndex4].AnimalBreedPercent) +
              parseFloat(Mother.AnimalBreedPercent4);
          } else {
            Breed.push({
              AnimalBreedID: Mother.AnimalBreedID4,
              AnimalBreedPercent: Mother.AnimalBreedPercent4,
            });
          }
        }

        if (Mother.AnimalBreedID5) {
          const getBreedIndex5 = Breed.findIndex(
            (breed) => breed.AnimalBreedID === Mother.AnimalBreedID5
          );

          if (getBreedIndex5 != -1) {
            Breed[getBreedIndex5].AnimalBreedPercent =
              parseFloat(Breed[getBreedIndex5].AnimalBreedPercent) +
              parseFloat(Mother.AnimalBreedPercent5);
          } else {
            Breed.push({
              AnimalBreedID: Mother.AnimalBreedID5,
              AnimalBreedPercent: Mother.AnimalBreedPercent5,
            });
          }
        }

        let Breed2 = Breed.map((b) => {
          b.AnimalBreedPercent = b.AnimalBreedPercent / 2;

          const found = HF.find((element) => {
            return Math.abs(element - b.AnimalBreedPercent) < 0.00732421875; // 0.0048828125
          });

          b.AnimalBreedPercent = found.toFixed(3);
          return b;
        });

        resolve(Breed2);
      } catch (error) {
        reject(ErrorNotFound(error));
        // reject(ErrorNotFound("id: not found"));
      }
    });
  },

  photo(id, filename) {
    return new Promise(async (resolve, reject) => {
      try {
        // Check ID
        const obj = await db.findByPk(id);
        if (!obj) reject(ErrorNotFound("id: not found"));

        // Update
        var os = require("os");
        var hostname = os.hostname();

        obj.AnimalImagePath = config.UploadPath + "/images/animal/" + filename;
        obj.save();

        resolve();
      } catch (error) {
        reject(ErrorBadRequest(error.message));
      }
    });
  },

  scopeSearch1(req, limit, offset) {
    // Where
    $where = {};

    if (req.query.AnimalID) $where["AnimalID"] = req.query.AnimalID;

    // if (req.query.GetUserID)
    // $where["AnimalMotherID"] = req.query.GetUserID;

    if (req.query.ProductionStatusID)
      $where["ProductionStatusID"] = req.query.ProductionStatusID;

    if (req.query.AnimalStatusID)
      $where["AnimalStatusID"] = req.query.AnimalStatusID;

    if (req.query.AnimalIdentificationID)
      $where["AnimalIdentificationID"] = {
        [Op.like]: "%" + req.query.AnimalIdentificationID + "%",
      };

    if (req.query.AnimalNationalID)
      $where["AnimalNationalID"] = {
        [Op.like]: "%" + req.query.AnimalNationalID + "%",
      };

    if (req.query.AnimalEarID)
      $where["AnimalEarID"] = {
        [Op.like]: "%" + req.query.AnimalEarID + "%",
      };

    if (req.query.AnimalMicrochip)
      $where["AnimalMicrochip"] = {
        [Op.like]: "%" + req.query.AnimalMicrochip + "%",
      };

    if (req.query.AnimalSexID) $where["AnimalSexID"] = req.query.AnimalSexID;

    if (req.query.AnimalTypeID)
      $where["AnimalTypeID"] = {
        [Op.in]: JSON.parse(req.query.AnimalTypeID),
      };

    if (req.query.AnimalName)
      $where["AnimalName"] = {
        [Op.like]: "%" + req.query.AnimalName + "%",
      };

    if (req.query.FarmID) $where["FarmID"] = req.query.FarmID;

    if (req.query.AnimalFirstBreed)
      $where["AnimalFirstBreed"] = req.query.AnimalFirstBreed;
    if (req.query.AnimalFatherID)
      $where["AnimalFatherID"] = req.query.AnimalFatherID;
    if (req.query.AnimalMotherID)
      $where["AnimalMotherID"] = req.query.AnimalMotherID;

    if (req.query.AnimalBornType)
      $where["AnimalBornType"] = req.query.AnimalBornType;
    if (req.query.AnimalBornTypeID)
      $where["AnimalBornTypeID"] = req.query.AnimalBornTypeID;
    if (req.query.AnimalSource)
      $where["AnimalBornTypeID"] = req.query.AnimalSource;
    if (req.query.SourceFarmID) $where["SourceFarmID"] = req.query.SourceFarmID;
    if (req.query.OrganizationID)
      $where["OrganizationID"] = req.query.OrganizationID;
    if (req.query.OrganizationZoneID)
      $where["OrganizationZoneID"] = req.query.OrganizationZoneID;

    // Breed

    // ช่วงวันเกิด
    if (req.query.AnimalBirthDateStart) {
      $where["AnimalBirthDate"] = {
        [Op.between]: [
          req.query.AnimalBirthDateStart,
          req.query.AnimalBirthDateEnd,
        ],
      };
    }

    // ProjectID
    let WhereProject = null;
    if (req.query.ProjectID) {
      WhereProject = {
        ProjectID: {
          [Op.in]: JSON.parse(req.query.ProjectID),
        },
      };
    }

    if (req.query.isActive) $where["isActive"] = req.query.isActive;
    if (req.query.CreatedUserID)
      $where["CreatedUserID"] = req.query.CreatedUserID;
    if (req.query.UpdatedUserID)
      $where["UpdatedUserID"] = req.query.UpdatedUserID;

    $where["isRemove"] = 0;
    const query = Object.keys($where).length > 0 ? { where: $where } : {};

    // Order
    $order = [["AnimalID", "ASC"]];
    if (req.query.orderByField && req.query.orderBy)
      $order = [
        [
          req.query.orderByField,
          req.query.orderBy.toLowerCase() == "desc" ? "desc" : "asc",
        ],
      ];
    query["order"] = $order;

    if (!isNaN(limit)) query["limit"] = limit;

    if (!isNaN(offset)) query["offset"] = offset;

    query["include"] = [
      { all: true, required: false },
      {
        model: Project,
        where: WhereProject,
      },
    ];

    return { query: query };
  },

  // insertChild(data) {
  //   return new Promise(async (resolve, reject) => {
  //     try {
  //       //check เงื่อนไขตรงนี้ได้
  //       if (data.ProjectID) {
  //         if (!Array.isArray(data.ProjectID)) {
  //           reject(ErrorBadRequest("Project ID ต้องอยู่ในรูปแบบ Array"));
  //           return;
  //         }
  //         var ProjectIDList = [...data.ProjectID];
  //         data.ProjectID = JSON.stringify(data.ProjectID);
  //       }
  //       const obj = new db(data);
  //       if (!obj.AnimalNationalID) {
  //         obj.AnimalNationalID = null;
  //       }
  //       if (!obj.AnimalEarID) {
  //         obj.AnimalEarID = null;
  //       }
  //       if (!obj.AnimalMicrochip) {
  //         obj.AnimalMicrochip = null;
  //       }
  //       const inserted = await obj.save();

  //       if (obj.GiveBirthSelfID) {
  //         data = {
  //           MotherAnimalID: obj.AnimalMotherID,
  //           AnimalID: inserted.AnimalID,
  //           FollowDate: null,
  //           Weigth: null,
  //           ResponsibilityStaffID: null,
  //           CreatedUserID: inserted.CreatedUserID,
  //         };
  //         var yearling = new Yearling(data)
  //         const inserted1 = await yearling.save();
  //       }

  //       if (data.ProjectID) {
  //         // insert AnimalToAnimalType
  //         ProjectIDList.forEach((ProjectID) => {
  //           const obj1 = AnimalToProject.create({
  //             AnimalID: inserted.AnimalID,
  //             ProjectID: ProjectID,
  //             CreatedUserID: data.CreatedUserID,
  //           });
  //         });
  //       }

  //       let res = methods.findById(inserted.AnimalID);

  //       resolve(res);
  //     } catch (error) {
  //       reject(ErrorBadRequest(error.message));
  //     }
  //   });
  // },

  findByFarmID(req) {
    const limit = +(req.query.size || config.pageLimit);
    const offset = +(limit * ((req.query.page || 1) - 1));
    const _q = methods.scopeSearch1(req, limit, offset);
    return new Promise(async (resolve, reject) => {
      try {
        Promise.all([await db.findAll(_q.query), db.count(_q.query)])
          .then(async (result) => {
            let rows = result[0],
              count = rows.length;

            //
            let noti = {
              noti1: 0,
              noti1Animal: [],
              noti2: 0,
              noti2Animal: [],
              noti3: 0,
              noti3Animal: [],
              noti4: 0,
              noti4Animal: [],
              noti5: 0,
              noti5Animal: [],
              noti6: 0,
              noti6Animal: [],
              noti7: 0,
              noti7Animal: [],
              noti8: 0,
              noti8Animal: [],
              noti9: 0,
              noti9Animal: [],
              noti10: 0,
              noti10Animal: [],
            };

            let countAnimal = {
              all: 0,
              child: 0,
              young: 0,
              girl: 0,
              father: 0,
              mother: 0,
            };

            const getWithPromiseAll = async () => {
              let data = await Promise.all(
                rows.map(async (data) => {
                  let projectArray = [];
                  data.Projects.forEach((element) => {
                    projectArray.push(element.ProjectName);
                  });

                  // data คือตัวสัตว์

                  let data1 = await data.EventLatest();
                  // data1

                  let cart = await Cart.findOne({
                    where: {
                      AnimalID: data.AnimalID,
                      UserID: req.body.GetUserID,
                    },
                  });

                  data1.cart = cart ? true : false;

                  data1.Notification = await data.Notification();
                  // noti1 = ครบกำหนดคลอด,
                  // noti2 = ครบกำหนดตรวจท้อง,
                  // noti3 = ครบกำหนดติดตาทลูกเกิดหลังคลอด
                  // noti4 = ครบกําหนดตรวจระบบสืบพันธุ์หลังคลอด
                  // noti5 = อายุมากกว่ากําหนด
                  // noti6 = แจ้งเตือนกลับสัด
                  // noti7 = ผสมซ้ำเกิน 3 ครั้ง
                  // noti8 = เลยกำหนดคลอด
                  // noti9 = Thai Black
                  // noti10 = แดงสุราษฏร์

                  if (data1.Notification.includes("ครบกำหนดคลอด")) {
                    noti.noti1 += 1;
                    noti.noti1Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (data1.Notification.includes("ครบกำหนดตรวจท้อง")) {
                    noti.noti2 += 1;
                    noti.noti2Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (
                    data1.Notification.includes(
                      "ครบกําหนดติดตามลูกเกิดหลังคลอด"
                    )
                  ) {
                    noti.noti3 += 1;
                    noti.noti3Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (
                    data1.Notification.includes(
                      "ครบกําหนดตรวจระบบสืบพันธุ์หลังคลอด"
                    )
                  ) {
                    noti.noti4 += 1;
                    noti.noti4Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (data1.Notification.includes("อายุมากกว่ากําหนด")) {
                    noti.noti5 += 1;
                    noti.noti5Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (data1.Notification.includes("แจ้งเตือนกลับสัด")) {
                    noti.noti6 += 1;
                    noti.noti6Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (data1.Notification.includes("ผสมซ้ำเกิน 3 ครั้ง")) {
                    noti.noti7 += 1;
                    noti.noti7Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (data1.Notification.includes("เลยกำหนดคลอด")) {
                    noti.noti8 += 1;
                    noti.noti8Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (
                    data1.Notification.includes(
                      "ครบกำหนดบันทึก Thaiblack รอบ 800 วัน"
                    ) ||
                    data1.Notification.includes(
                      "ครบกำหนดบันทึก Thaiblack รอบ 600 วัน"
                    ) ||
                    data1.Notification.includes(
                      "ครบกำหนดบันทึก Thaiblack รอบ 400 วัน"
                    ) ||
                    data1.Notification.includes(
                      "ครบกำหนดบันทึก Thaiblack รอบ 210 วัน"
                    )
                  ) {
                    noti.noti9 += 1;
                    noti.noti9Animal.push(data1.AnimalID);
                    // noti7Animal
                  }

                  if (
                    data1.Notification.includes(
                      "ครบกำหนดบันทึก แดงสุราษฏร์ รอบ 1 ปี"
                    ) ||
                    data1.Notification.includes(
                      "ครบกำหนดบันทึก แดงสุราษฏร์ รอบ 30 วัน"
                    )
                  ) {
                    noti.noti10 += 1;
                    noti.noti10Animal.push(data1.AnimalID);
                    // noti10Animal
                  }

                  countAnimal.all = countAnimal.all + 1;
                  countAnimal.child = [1, 6, 11].includes(data.AnimalStatusID)
                    ? countAnimal.child + 1
                    : countAnimal.child;

                  countAnimal.young = [2, 7, 12].includes(data.AnimalStatusID)
                    ? countAnimal.young + 1
                    : countAnimal.young;

                  countAnimal.girl = [3, 8, 13].includes(data.AnimalStatusID)
                    ? countAnimal.girl + 1
                    : countAnimal.girl;

                  countAnimal.father = [4, 9, 14].includes(data.AnimalStatusID)
                    ? countAnimal.father + 1
                    : countAnimal.father;

                  countAnimal.mother = [5, 10, 15].includes(data.AnimalStatusID)
                    ? countAnimal.mother + 1
                    : countAnimal.mother;

                  return data1;
                })
              );

              return data;
            };

            let animal = await getWithPromiseAll();

            resolve({
              total: count,
              lastPage: Math.ceil(count / limit),
              currPage: +req.query.page || 1,
              rows: animal,
              noti,
              countAnimal,
            });
          })
          .catch((error) => {
            reject(error);
          });
      } catch (error) {
        reject(error);
      }
    });
  },

  exportRegisteredAnimal(req) {
    return new Promise(async (resolve, reject) => {
      try {
        let animal = await db.findByPk(req.params.id, {
          include: [{ model: Farm, as: "AnimalFarm" }],
        });

        let ai = await AI.findAll({
          where: { AnimalID: req.params.id, isRemove: 0 },
          order: [["AIID", "ASC"]],
          include: [
            { model: Semen, as: "Semen" },
            { model: Staff, as: "Staff" },
            {
              model: PregnancyCheckup,
              limit: 1,
              include: { model: PregnancyCheckStatus },
              order: [
                ["CheckupDate", "DESC"],
                ["PregnancyCheckupID", "DESC"],
              ],
            },
            {
              model: GiveBirth,
              as: "GiveBirth",
            },
          ],
        });

        let aiRes = await Promise.all(
          ai.map(async (a) => {
            // GiveBirthSelfID
            let ChildSex = "";

            if (a.GiveBirth) {
              let GiveBirthSelf = await db.findAll({
                where: { GiveBirthSelfID: a.GiveBirth.GiveBirthID },
                include: [{ model: AnimalSex, as: "AnimalSex" }],
              });

              if (GiveBirthSelf) {
                GiveBirthSelf.forEach((g) => {
                  ChildSex = ChildSex + " " + g.AnimalSex.AnimalSexName;
                });
              }
            }

            let data = {
              PAR: a.PAR,
              TimeNo: a.TimeNo,
              AIDate: a.ThaiAIDate,
              SemenNumber: a.Semen.SemenNumber,
              Staff: a.Staff.StaffNumber,
              PregnancyCheckup: a.PregnancyCheckups
                ? a.PregnancyCheckups[0]
                  ? a.PregnancyCheckups[0].toJSON().PregnancyCheckStatus
                      .PregnancyCheckStatusName
                  : ""
                : "",
              GiveBirthDate: a.GiveBirth ? a.GiveBirth.ThaiGiveBirthDate : "",
              ChildSex: ChildSex,
            };

            return data;
          })
        );

        //

        let diseaseActivityAnimal = await DiseaseActivityAnimal.findAll({
          where: { AnimalID: req.params.id, isRemove: 0 },
          include: [
            {
              model: DiseaseActivity,
              as: "DiseaseActivity",
              include: [{ model: Disease, as: "Disease" }],
            },
            {
              model: DiseaseResult,
              as: "DiseaseResult",
            },
          ],
          order: [["DiseaseActivityID", "ASC"]],
        });

        let disease = [];
        diseaseActivityAnimal.forEach((d) => {
          let searchDisease = disease.find((f) => {
            return f.DiseaseID === d.DiseaseActivity.DiseaseID;
          });

          if (!searchDisease) {
            disease.push({
              DiseaseID: d.DiseaseActivity.DiseaseID,
              DiseaseName: d.DiseaseActivity.Disease.DiseaseName,
              Time: [
                {
                  Date: d.DiseaseActivity.ThaiDiseaseActivityDate,
                  Result: d.DiseaseResult.DiseaseResultName,
                },
              ],
            });
          } else {
            searchDisease.Time.push({
              Date: d.DiseaseActivity.ThaiDiseaseActivityDate,
              Result: d.DiseaseResult.DiseaseResultName,
            });
          }
        });

        //
        let vaccineActivity = await VaccineActivity.findAll({
          where: {
            AnimalID: {
              [Op.or]: [
                { [Op.like]: "%," + req.params.id + ",%" },
                { [Op.like]: "[" + req.params.id + ",%" },
                { [Op.like]: "%," + req.params.id + "]" },
                { [Op.like]: "[" + req.params.id + "]" },
              ],
            },
            isRemove: 0,
          },
          include: [
            {
              model: Vaccine,
              as: "Vaccine",
            },
            {
              model: Staff,
              as: "Staff",
            },
          ],
          order: [["VaccineActivityID", "ASC"]],
        });

        let vaccine = [];

        vaccineActivity.forEach((d) => {
          let searchVaccine = vaccine.find((f) => {
            return f.VaccineID === d.VaccineID;
          });

          if (!searchVaccine) {
            vaccine.push({
              VaccineID: d.VaccineID,
              VaccineName: d.Vaccine.VaccineName,
              Time: [
                {
                  Date: d.ThaiVaccineActivityDate,
                  Staff: d.Staff.StaffNumber,
                },
              ],
            });
          } else {
            searchVaccine.Time.push({
              Date: d.ThaiVaccineActivityDate,
              Staff: d.Staff.StaffNumber,
            });
          }
        });

        // deworm
        //
        let dewormActivity = await DewormActivity.findAll({
          where: {
            AnimalID: {
              [Op.or]: [
                { [Op.like]: "%," + req.params.id + ",%" },
                { [Op.like]: "[" + req.params.id + ",%" },
                { [Op.like]: "%," + req.params.id + "]" },
                { [Op.like]: "[" + req.params.id + "]" },
              ],
            },
            isRemove: 0,
          },
          include: [
            {
              model: DewormMedicine,
              as: "DewormMedicine",
            },
            {
              model: Staff,
              as: "Staff",
            },
          ],
          order: [["DewormActivityID", "ASC"]],
        });

        let deworm = [];

        dewormActivity.forEach((d) => {
          let searchDeworm = deworm.find((f) => {
            return f.DewormMedicineID === d.DewormMedicineID;
          });

          if (!searchDeworm) {
            deworm.push({
              DewormMedicineID: d.DewormMedicineID,
              DewormMedicineName: d.DewormMedicine.DewormMedicineName,
              Time: [
                {
                  Date: d.ThaiDewormActivityDate,
                  Staff: d.Staff.StaffNumber,
                },
              ],
            });
          } else {
            searchDeworm.Time.push({
              Date: d.ThaiDewormActivityDate,
              Staff: d.Staff.StaffNumber,
            });
          }
        });

        // cureActivity
        let cureActivity = await CureActivity.findAll({
          where: {
            AnimalID: req.params.id,
            isRemove: 0,
          },
          include: [
            {
              model: Disease,
              as: "Disease",
            },
            {
              model: Staff,
              as: "Staff",
            },
          ],
          order: [["CureActivityID", "ASC"]],
        });

        let cure = [];
        cureActivity.forEach((d) => {
          cure.push({
            Date: d.ThaiCureActivityDate,
            Remark: d.Remark,
            Staff: d.Staff.StaffNumber,
          });
        });

        //
        let data = {
          AnimalName: animal.AnimalName,
          AnimalEarID: animal.AnimalEarID,
          AnimalBirthDate: animal.ThaiAnimalBirthDate,
          AnimalBreedAll: animal.AnimalBreedAll,
          AnimalDadBreed: "TH890890",
          AnimaMomBreed: "4343dsd90934",
          FarmName: animal.AnimalFarm.FarmName,
          FarmIdentificationNumber: animal.AnimalFarm.FarmIdentificationNumber,
          FarmAddress: `${animal.AnimalFarm.FarmAddress}`,
          // AI
          AI: [...aiRes],
          Disease: disease,
          Vaccine: vaccine,
          Deworm: deworm,
          Cure: cure,
        };

        resolve(data);
      } catch (error) {
        reject(ErrorNotFound(error));
      }
    });
  },
};

module.exports = { ...methods };
